{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/hwfront/src/components/Store/Card.js\";\nimport * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MediaCard(props) {\n  const {\n    name,\n    store_email,\n    shelter_name,\n    available,\n    handleDelete,\n    store_name,\n    quantity,\n    date_posted,\n    request_status,\n    id,\n    handleRequestDelete,\n    type,\n    request_date,\n    order_status\n  } = props;\n  const orderLink = `viewOrder/${id}`;\n\n  if (type === \"order\") {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      className: \"orderLink\",\n      to: orderLink,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345\n        },\n        style: {\n          marginBottom: '10%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          height: \"140\",\n          alt: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            component: \"div\",\n            style: {\n              marginBottom: '8%'\n            },\n            children: type === \"order\" ? /*#__PURE__*/_jsxDEV(Link, {\n              className: \"orderLink\",\n              to: orderLink,\n              children: [name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 35\n            }, this) : name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '5%'\n            },\n            children: shelter_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '5%'\n            },\n            children: [\"Quantity: \", quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), type === \"order\" ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '5%'\n            },\n            children: [\"Status : \", order_status === \"Order Sent\" ? \"Order Received\" : order_status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this) : null, type === \"order\" && date_posted ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '3%'\n            },\n            children: [\"Order Date: \", new Date(date_posted.seconds * 1000).toString().slice(0, 15), console.log(date_posted)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 48\n          }, this) : null, type === \"request\" && request_date ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '3%'\n            },\n            children: [\"Request Date: \", new Date(request_date.seconds * 1000).toString().slice(0, 15)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 51\n          }, this) : null, request_status ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text-secondary\",\n            style: {\n              marginBottom: '3%'\n            },\n            children: [\"Status: \", request_status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 31\n          }, this) : null, available !== \"Not Applicable\" ? available === true ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"green\",\n            children: \"Currently Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"red\",\n            children: \"Currently Unavailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        height: \"140\",\n        alt: \"green iguana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          style: {\n            marginBottom: '8%'\n          },\n          children: type === \"order\" ? /*#__PURE__*/_jsxDEV(Link, {\n            className: \"orderLink\",\n            to: orderLink,\n            children: [name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this) : name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '5%'\n          },\n          children: shelter_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '5%'\n          },\n          children: [\"Quantity: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), type === \"order\" ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '5%'\n          },\n          children: [\"Status : \", order_status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this) : null, type === \"order\" && date_posted ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '3%'\n          },\n          children: [\"Order Date: \", new Date(date_posted.seconds * 1000).toString().slice(0, 15), console.log(date_posted)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 46\n        }, this) : null, type === \"request\" && request_date ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '3%'\n          },\n          children: [\"Request Date: \", new Date(request_date.seconds * 1000).toString().slice(0, 15)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 49\n        }, this) : null, request_status ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text-secondary\",\n          style: {\n            marginBottom: '3%'\n          },\n          children: [\"Status: \", request_status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this) : null, available !== \"Not Applicable\" ? available === true ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"green\",\n          children: \"Currently Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"red\",\n          children: \"Currently Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), type === \"listing\" ? /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"order-link\",\n          onClick: () => handleDelete(id),\n          style: {\n            textDecoration: \"None\",\n            textAlign: 'Center'\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n}\n_c = MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/Users/trapbookpro/Development/hwfront/src/components/Store/Card.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Typography","Link","MediaCard","props","name","store_email","shelter_name","available","handleDelete","store_name","quantity","date_posted","request_status","id","handleRequestDelete","type","request_date","order_status","orderLink","maxWidth","marginBottom","Date","seconds","toString","slice","console","log","textDecoration","textAlign"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MediaCard(props) {\n  const { name, store_email, shelter_name, available, handleDelete, store_name, quantity, date_posted, request_status, id, handleRequestDelete, type, request_date, order_status } =\n    props;\n\n    const orderLink = `viewOrder/${id}`; \n\n    if (type === \"order\"){\n\n      return (\n        <Link className = \"orderLink\" to = {orderLink}>\n        <Card sx={{ maxWidth: 345 }} style = {{marginBottom : '10%'}}>\n          <CardMedia height=\"140\" alt=\"green iguana\" />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n              {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n            </Typography>\n            <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              {shelter_name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              Quantity: {quantity}\n            </Typography>\n    \n            \n            {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n                Status : {order_status === \"Order Sent\" ? \"Order Received\" : order_status}\n            </Typography>: null}\n            {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Order Date: {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n              {console.log(date_posted)}\n            </Typography>: null}\n            \n            {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Request Date: {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n              </Typography> : null}\n    \n            {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Status: {request_status}\n            </Typography>: null }\n    \n            {available !== \"Not Applicable\" ? available === true ? (\n              <Typography variant=\"body2\" color=\"green\">\n                Currently Available\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" color=\"red\">\n                Currently Unavailable\n              </Typography>\n            ) : null}\n          </CardContent>\n\n          {/* {available !== \"Not Applicable\" ? <CardActions>\n            {console.log(id)}\n            <Link className = \"order-link\" style = {{textDecoration : \"None\"}} to = {`/order/${id}`}>Order</Link>\n          </CardActions> : <CardActions>\n            {type === \"request\" ?  <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a> : null\n    }\n          </CardActions>} */}\n          \n        </Card>\n        </Link>\n      );\n    }\n\n    else {\n      return ( <Card sx={{ maxWidth: 345 }}>\n        <CardMedia height=\"140\" alt=\"green iguana\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n            {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n          </Typography>\n          <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            {shelter_name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            Quantity: {quantity}\n          </Typography>\n  \n          \n          {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n              Status : {order_status}\n          </Typography>: null}\n          {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Order Date: {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n            {console.log(date_posted)}\n          </Typography>: null}\n          \n          {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Request Date: {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n            </Typography> : null}\n  \n          {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Status: {request_status}\n          </Typography>: null }\n  \n          {available !== \"Not Applicable\" ? available === true ? (\n            <Typography variant=\"body2\" color=\"green\">\n              Currently Available\n            </Typography>\n          ) : (\n            <Typography variant=\"body2\" color=\"red\">\n              Currently Unavailable\n            </Typography>\n          ) : null}\n        </CardContent>\n\n         \n          \n    {type === \"listing\" ? \n        <CardActions> \n            <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a>\n\n        </CardActions> : null}\n        \n      </Card>)\n    }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}