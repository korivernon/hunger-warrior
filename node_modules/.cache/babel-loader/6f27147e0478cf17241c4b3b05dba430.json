{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/hunger-warrior/src/components/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.setApiKey(\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\");\n\nclass MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: 0,\n      lng: 0,\n      loading: true,\n      lat2: 0,\n      lng2: 0,\n      isOpen: false\n    };\n    this.mapStyles = {\n      height: \"500px\",\n      width: this.props.width ? this.props.width : \"100%\"\n    };\n    this.defaultCenter = {\n      lat: this.state.lat,\n      lng: this.state.lon\n    };\n  }\n\n  componentDidMount() {\n    Geocode.fromAddress(this.props.address).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      this.setState({\n        lat: lat,\n        lng: lng,\n        loading: false\n      });\n    });\n\n    if (this.props.address2) {\n      this.setState({\n        loading: true\n      });\n      Geocode.fromAddress(this.props.address2).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          lat2: lat,\n          lng2: lng,\n          loading: false\n        });\n      });\n    }\n  }\n\n  render() {\n    return this.state.loading ? \"LOADING...\" : /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: this.mapStyles,\n        zoom: this.props.address2 ? 10 : 13,\n        center: {\n          lat: this.state.lat,\n          lng: this.state.lng\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: this.state.lat,\n            lng: this.state.lng\n          },\n          onClick: () => {\n            this.setState({\n              isOpen: !this.state.isOpen\n            });\n          },\n          children: this.state.isOpen ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: this.state.lat,\n              lng: this.state.lng\n            },\n            onCloseClick: () => this.setState({\n              isOpen: !this.state.isOpen\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.props.storeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), this.props.address2 ? /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: this.state.lat2,\n            lng: this.state.lng2\n          },\n          onClick: () => this.setState({\n            isOpen: !this.state.isOpen\n          }),\n          children: this.state.isOpen ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: this.state.lat2,\n              lng: this.state.lng2\n            },\n            onCloseClick: () => {\n              this.setState({\n                isOpen: !this.state.isOpen\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.props.shelterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapContainer;","map":{"version":3,"sources":["/Users/trapbookpro/Development/hunger-warrior/src/components/Map.js"],"names":["React","GoogleMap","LoadScript","Marker","InfoWindow","Geocode","setLanguage","setRegion","setApiKey","MapContainer","Component","state","lat","lng","loading","lat2","lng2","isOpen","mapStyles","height","width","props","defaultCenter","lon","componentDidMount","fromAddress","address","then","response","results","geometry","location","setState","address2","render","storeName","shelterName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAOA,OAAOC,OAAP,MAAoB,eAApB;;AAEAA,OAAO,CAACC,WAAR,CAAoB,IAApB;AACAD,OAAO,CAACE,SAAR,CAAkB,IAAlB;AACAF,OAAO,CAACG,SAAR,CAAkB,yCAAlB;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,GAAG,EAAE,CAFC;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,IAAI,EAAE,CAJA;AAKNC,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,MAAM,EAAE;AANF,KADiC;AAAA,SAUzCC,SAVyC,GAU7B;AACVC,MAAAA,MAAM,EAAE,OADE;AAEVC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB,KAAKC,KAAL,CAAWD,KAA9B,GAAsC;AAFnC,KAV6B;AAAA,SAezCE,aAfyC,GAezB;AACdV,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GADF;AAEdC,MAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWY;AAFF,KAfyB;AAAA;;AAoBzCC,EAAAA,iBAAiB,GAAG;AAClBnB,IAAAA,OAAO,CAACoB,WAAR,CAAoB,KAAKJ,KAAL,CAAWK,OAA/B,EAAwCC,IAAxC,CAA8CC,QAAD,IAAc;AACzD,YAAM;AAAEhB,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAee,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACA,WAAKC,QAAL,CAAc;AAAEpB,QAAAA,GAAG,EAAEA,GAAP;AAAYC,QAAAA,GAAG,EAAEA,GAAjB;AAAsBC,QAAAA,OAAO,EAAE;AAA/B,OAAd;AACD,KAHD;;AAKA,QAAI,KAAKO,KAAL,CAAWY,QAAf,EAAyB;AACvB,WAAKD,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,OAAO,CAACoB,WAAR,CAAoB,KAAKJ,KAAL,CAAWY,QAA/B,EAAyCN,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,cAAM;AAAEhB,UAAAA,GAAF;AAAOC,UAAAA;AAAP,YAAee,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACA,aAAKC,QAAL,CAAc;AAAEjB,UAAAA,IAAI,EAAEH,GAAR;AAAaI,UAAAA,IAAI,EAAEH,GAAnB;AAAwBC,UAAAA,OAAO,EAAE;AAAjC,SAAd;AACD,OAHD;AAID;AACF;;AAEDoB,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKvB,KAAL,CAAWG,OAAX,GACL,YADK,gBAGL,QAAC,UAAD;AAAY,MAAA,gBAAgB,EAAC,yCAA7B;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,iBAAiB,EAAE,KAAKI,SAD1B;AAEE,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWY,QAAX,GAAsB,EAAtB,GAA2B,EAFnC;AAGE,QAAA,MAAM,EAAE;AAAErB,UAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAlB;AAAuBC,UAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE;AAAvC,SAHV;AAAA,gCAKE,QAAC,MAAD;AACE,UAAA,QAAQ,EAAE;AAAED,YAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAlB;AAAuBC,YAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE;AAAvC,WADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKmB,QAAL,CAAc;AAAEf,cAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAtB,aAAd;AACD,WAJH;AAAA,oBAMG,KAAKN,KAAL,CAAWM,MAAX,gBACC,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE;AAAEL,cAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAlB;AAAuBC,cAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE;AAAvC,aADZ;AAEE,YAAA,YAAY,EAAE,MACZ,KAAKmB,QAAL,CAAc;AAAEf,cAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAtB,aAAd,CAHJ;AAAA,mCAME;AAAA,wBAAI,KAAKI,KAAL,CAAWc;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADD,GASG;AAfN;AAAA;AAAA;AAAA;AAAA,gBALF,EAsBG,KAAKd,KAAL,CAAWY,QAAX,gBACC,QAAC,MAAD;AACE,UAAA,QAAQ,EAAE;AAAErB,YAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWI,IAAlB;AAAwBF,YAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWK;AAAxC,WADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKgB,QAAL,CAAc;AAAEf,YAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAtB,WAAd,CAFjB;AAAA,oBAIG,KAAKN,KAAL,CAAWM,MAAX,gBACC,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE;AAAEL,cAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWI,IAAlB;AAAwBF,cAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWK;AAAxC,aADZ;AAEE,YAAA,YAAY,EAAE,MAAM;AAClB,mBAAKgB,QAAL,CAAc;AAAEf,gBAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAtB,eAAd;AACD,aAJH;AAAA,mCAME;AAAA,wBAAI,KAAKI,KAAL,CAAWe;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADD,GASG;AAbN;AAAA;AAAA;AAAA;AAAA,gBADD,GAgBG,IAtCN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AA8CD;;AAlFwC;;AAqF3C,eAAe3B,YAAf","sourcesContent":["import React from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.setApiKey(\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\");\n\nclass MapContainer extends React.Component {\n  state = {\n    lat: 0,\n    lng: 0,\n    loading: true,\n    lat2: 0,\n    lng2: 0,\n    isOpen: false,\n  };\n\n  mapStyles = {\n    height: \"500px\",\n    width: this.props.width ? this.props.width : \"100%\",\n  };\n\n  defaultCenter = {\n    lat: this.state.lat,\n    lng: this.state.lon,\n  };\n\n  componentDidMount() {\n    Geocode.fromAddress(this.props.address).then((response) => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this.setState({ lat: lat, lng: lng, loading: false });\n    });\n\n    if (this.props.address2) {\n      this.setState({ loading: true });\n      Geocode.fromAddress(this.props.address2).then((response) => {\n        const { lat, lng } = response.results[0].geometry.location;\n        this.setState({ lat2: lat, lng2: lng, loading: false });\n      });\n    }\n  }\n\n  render() {\n    return this.state.loading ? (\n      \"LOADING...\"\n    ) : (\n      <LoadScript googleMapsApiKey=\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\">\n        <GoogleMap\n          mapContainerStyle={this.mapStyles}\n          zoom={this.props.address2 ? 10 : 13}\n          center={{ lat: this.state.lat, lng: this.state.lng }}\n        >\n          <Marker\n            position={{ lat: this.state.lat, lng: this.state.lng }}\n            onClick={() => {\n              this.setState({ isOpen: !this.state.isOpen });\n            }}\n          >\n            {this.state.isOpen ? (\n              <InfoWindow\n                position={{ lat: this.state.lat, lng: this.state.lng }}\n                onCloseClick={() =>\n                  this.setState({ isOpen: !this.state.isOpen })\n                }\n              >\n                <p>{this.props.storeName}</p>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n          {this.props.address2 ? (\n            <Marker\n              position={{ lat: this.state.lat2, lng: this.state.lng2 }}\n              onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            >\n              {this.state.isOpen ? (\n                <InfoWindow\n                  position={{ lat: this.state.lat2, lng: this.state.lng2 }}\n                  onCloseClick={() => {\n                    this.setState({ isOpen: !this.state.isOpen });\n                  }}\n                >\n                  <p>{this.props.shelterName}</p>\n                </InfoWindow>\n              ) : null}\n            </Marker>\n          ) : null}\n        </GoogleMap>\n      </LoadScript>\n    );\n  }\n}\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}