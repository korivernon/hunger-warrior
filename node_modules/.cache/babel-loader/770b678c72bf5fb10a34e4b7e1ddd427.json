{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/hwfront/src/components/Shelter/Match.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getDistance } from \"geolib\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport MapContainer from \"../Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = props => {\n  _s();\n\n  const {\n    userDetails,\n    stores\n  } = props;\n  const [distances, setDistances] = useState([]);\n\n  const convertToMiles = meters => {\n    return (meters * 0.000621371).toFixed(3);\n  };\n\n  const sortArray = obj => {\n    let distances = [];\n    let result = [];\n    obj.map(store => {\n      distances.push(store[Object.keys(store)[0]]);\n    });\n    distances.sort((a, b) => {\n      return a - b;\n    });\n    distances.forEach(distance => {\n      obj.map(object => {\n        if (object[Object.keys(object)[0]] == distance) {\n          let newObj = {};\n          newObj[Object.keys(object)[0]] = distance;\n          result.push(newObj);\n        }\n      });\n    });\n    return result;\n  };\n\n  const getDistances = () => {\n    let distancesArray = [];\n    stores.forEach(store => {\n      let obj = {};\n      let userCoords = {\n        latitude: userDetails.latitude,\n        longitude: userDetails.longitude\n      };\n      let storeCoords = {\n        latitude: store.latitude,\n        longitude: store.longitude\n      };\n      let distance = getDistance(userCoords, storeCoords, 1);\n      obj[store.name] = distance;\n      distancesArray.push(obj);\n    });\n    distancesArray = sortArray(distancesArray);\n    setDistances(distancesArray);\n  };\n\n  const displayStores = distances => {\n    return distances.map(distance_to_store => {\n      return stores.map(store => {\n        if (store.name == Object.keys(distance_to_store)[0]) {\n          let profileLink = `/profile/${store.email}`;\n          let listingsLink = `${profileLink}#listings-from-store`;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 8,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7.5,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"store_information\",\n                style: {\n                  margin: \"2% 0\",\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"store_picture\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"100%\",\n                    height: \"300\",\n                    src: store.image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"store_title\",\n                  children: store.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"store_title\",\n                  children: [\"Distance :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: \"bold\"\n                    },\n                    children: [convertToMiles(distance_to_store[Object.keys(distance_to_store)[0]]), \" \", \"miles\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"store_location\",\n                  children: store.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"store_phone\",\n                  children: store.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"store_information_buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    className: \"store_links_1\",\n                    to: listingsLink,\n                    children: \"View Listings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"store_links_2\",\n                    to: profileLink,\n                    children: \"Store Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4.5,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: \"2% 0\"\n                },\n                children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                  height: \"600px\",\n                  shelterName: userDetails.name,\n                  storeName: store.name,\n                  latlng1: {\n                    latitude: userDetails.latitude,\n                    longitude: userDetails.longitude\n                  },\n                  latlng2: {\n                    latitude: store.latitude,\n                    longitude: store.longitude\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getDistances();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title\",\n      style: {\n        marginBottom: \"2%\"\n      },\n      children: \"Find a Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"2%\"\n      },\n      children: \"Here is a list of the best matches according to your location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), distances ? displayStores(distances) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"/GSn55yNQQ1YX9x7x/UUKXohP9k=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["/Users/trapbookpro/Development/hwfront/src/components/Shelter/Match.js"],"names":["React","useState","useEffect","getDistance","Navbar","Link","Grid","MapContainer","Match","props","userDetails","stores","distances","setDistances","convertToMiles","meters","toFixed","sortArray","obj","result","map","store","push","Object","keys","sort","a","b","forEach","distance","object","newObj","getDistances","distancesArray","userCoords","latitude","longitude","storeCoords","name","displayStores","distance_to_store","profileLink","email","listingsLink","margin","width","image","fontWeight","location","phone","marginBottom","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,QAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BF,KAAhC;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMa,cAAc,GAAIC,MAAD,IAAY;AACjC,WAAO,CAACA,MAAM,GAAG,WAAV,EAAuBC,OAAvB,CAA+B,CAA/B,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzB,QAAIN,SAAS,GAAG,EAAhB;AACA,QAAIO,MAAM,GAAG,EAAb;AAEAD,IAAAA,GAAG,CAACE,GAAJ,CAASC,KAAD,IAAW;AACjBT,MAAAA,SAAS,CAACU,IAAV,CAAeD,KAAK,CAACE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmB,CAAnB,CAAD,CAApB;AACD,KAFD;AAGAT,IAAAA,SAAS,CAACa,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,aAAOD,CAAC,GAAGC,CAAX;AACD,KAFD;AAIAf,IAAAA,SAAS,CAACgB,OAAV,CAAmBC,QAAD,IAAc;AAC9BX,MAAAA,GAAG,CAACE,GAAJ,CAASU,MAAD,IAAY;AAClB,YAAIA,MAAM,CAACP,MAAM,CAACC,IAAP,CAAYM,MAAZ,EAAoB,CAApB,CAAD,CAAN,IAAkCD,QAAtC,EAAgD;AAC9C,cAAIE,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,CAACR,MAAM,CAACC,IAAP,CAAYM,MAAZ,EAAoB,CAApB,CAAD,CAAN,GAAiCD,QAAjC;AACAV,UAAAA,MAAM,CAACG,IAAP,CAAYS,MAAZ;AACD;AACF,OAND;AAOD,KARD;AASA,WAAOZ,MAAP;AACD,GArBD;;AAuBA,QAAMa,YAAY,GAAG,MAAM;AACzB,QAAIC,cAAc,GAAG,EAArB;AAEAtB,IAAAA,MAAM,CAACiB,OAAP,CAAgBP,KAAD,IAAW;AACxB,UAAIH,GAAG,GAAG,EAAV;AAEA,UAAIgB,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEzB,WAAW,CAACyB,QADP;AAEfC,QAAAA,SAAS,EAAE1B,WAAW,CAAC0B;AAFR,OAAjB;AAKA,UAAIC,WAAW,GAAG;AAChBF,QAAAA,QAAQ,EAAEd,KAAK,CAACc,QADA;AAEhBC,QAAAA,SAAS,EAAEf,KAAK,CAACe;AAFD,OAAlB;AAKA,UAAIP,QAAQ,GAAG1B,WAAW,CAAC+B,UAAD,EAAaG,WAAb,EAA0B,CAA1B,CAA1B;AAEAnB,MAAAA,GAAG,CAACG,KAAK,CAACiB,IAAP,CAAH,GAAkBT,QAAlB;AACAI,MAAAA,cAAc,CAACX,IAAf,CAAoBJ,GAApB;AACD,KAjBD;AAmBAe,IAAAA,cAAc,GAAGhB,SAAS,CAACgB,cAAD,CAA1B;AACApB,IAAAA,YAAY,CAACoB,cAAD,CAAZ;AACD,GAxBD;;AA0BA,QAAMM,aAAa,GAAI3B,SAAD,IAAe;AACnC,WAAOA,SAAS,CAACQ,GAAV,CAAeoB,iBAAD,IAAuB;AAC1C,aAAO7B,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AAC3B,YAAIA,KAAK,CAACiB,IAAN,IAAcf,MAAM,CAACC,IAAP,CAAYgB,iBAAZ,EAA+B,CAA/B,CAAlB,EAAqD;AACnD,cAAIC,WAAW,GAAI,YAAWpB,KAAK,CAACqB,KAAM,EAA1C;AACA,cAAIC,YAAY,GAAI,GAAEF,WAAY,sBAAlC;AAEA,8BACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,GAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,mBADZ;AAEE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,MAAM,EAAE,MAAV;AAAkBC,kBAAAA,KAAK,EAAE;AAAzB,iBAFT;AAAA,wCAIE;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,yCACE;AAAK,oBAAA,KAAK,EAAC,MAAX;AAAkB,oBAAA,MAAM,EAAC,KAAzB;AAA+B,oBAAA,GAAG,EAAExB,KAAK,CAACyB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF,eAOE;AAAI,kBAAA,SAAS,EAAC,aAAd;AAAA,4BAA6BzB,KAAK,CAACiB;AAAnC;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAI,kBAAA,SAAS,EAAC,aAAd;AAAA,2CACa,GADb,eAEE;AAAM,oBAAA,KAAK,EAAE;AAAES,sBAAAA,UAAU,EAAE;AAAd,qBAAb;AAAA,+BACGjC,cAAc,CACb0B,iBAAiB,CAACjB,MAAM,CAACC,IAAP,CAAYgB,iBAAZ,EAA+B,CAA/B,CAAD,CADJ,CADjB,EAGK,GAHL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eAiBE;AAAG,kBAAA,SAAS,EAAC,gBAAb;AAAA,4BAA+BnB,KAAK,CAAC2B;AAArC;AAAA;AAAA;AAAA;AAAA,wBAjBF,eAkBE;AAAG,kBAAA,SAAS,EAAC,aAAb;AAAA,4BAA4B3B,KAAK,CAAC4B;AAAlC;AAAA;AAAA;AAAA;AAAA,wBAlBF,eAmBE;AAAK,kBAAA,SAAS,EAAC,2BAAf;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,SAAS,EAAC,eAAhB;AAAgC,oBAAA,EAAE,EAAEN,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD;AAAM,oBAAA,SAAS,EAAC,eAAhB;AAAgC,oBAAA,EAAE,EAAEF,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAgCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,GAAf;AAAA,qCACE;AAAK,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,MAAM,EAAE;AAAV,iBAAZ;AAAA,uCACE,QAAC,YAAD;AACE,kBAAA,MAAM,EAAC,OADT;AAEE,kBAAA,WAAW,EAAElC,WAAW,CAAC4B,IAF3B;AAGE,kBAAA,SAAS,EAAEjB,KAAK,CAACiB,IAHnB;AAIE,kBAAA,OAAO,EAAE;AACPH,oBAAAA,QAAQ,EAAEzB,WAAW,CAACyB,QADf;AAEPC,oBAAAA,SAAS,EAAE1B,WAAW,CAAC0B;AAFhB,mBAJX;AAQE,kBAAA,OAAO,EAAE;AACPD,oBAAAA,QAAQ,EAAEd,KAAK,CAACc,QADT;AAEPC,oBAAAA,SAAS,EAAEf,KAAK,CAACe;AAFV;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAoDD;AACF,OA1DM,CAAP;AA2DD,KA5DM,CAAP;AA6DD,GA9DD;;AAgEAlC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAA8B,MAAA,KAAK,EAAE;AAAEkB,QAAAA,YAAY,EAAE;AAAhB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,QAAb;AAAuBD,QAAAA,YAAY,EAAE;AAArC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAWGtC,SAAS,GAAG2B,aAAa,CAAC3B,SAAD,CAAhB,GAA8B,IAX1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7ID;;GAAMJ,K;;KAAAA,K;AA+IN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getDistance } from \"geolib\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport MapContainer from \"../Map\";\n\nconst Match = (props) => {\n  const { userDetails, stores } = props;\n\n  const [distances, setDistances] = useState([]);\n\n  const convertToMiles = (meters) => {\n    return (meters * 0.000621371).toFixed(3);\n  };\n\n  const sortArray = (obj) => {\n    let distances = [];\n    let result = [];\n\n    obj.map((store) => {\n      distances.push(store[Object.keys(store)[0]]);\n    });\n    distances.sort((a, b) => {\n      return a - b;\n    });\n\n    distances.forEach((distance) => {\n      obj.map((object) => {\n        if (object[Object.keys(object)[0]] == distance) {\n          let newObj = {};\n          newObj[Object.keys(object)[0]] = distance;\n          result.push(newObj);\n        }\n      });\n    });\n    return result;\n  };\n\n  const getDistances = () => {\n    let distancesArray = [];\n\n    stores.forEach((store) => {\n      let obj = {};\n\n      let userCoords = {\n        latitude: userDetails.latitude,\n        longitude: userDetails.longitude,\n      };\n\n      let storeCoords = {\n        latitude: store.latitude,\n        longitude: store.longitude,\n      };\n\n      let distance = getDistance(userCoords, storeCoords, 1);\n\n      obj[store.name] = distance;\n      distancesArray.push(obj);\n    });\n\n    distancesArray = sortArray(distancesArray);\n    setDistances(distancesArray);\n  };\n\n  const displayStores = (distances) => {\n    return distances.map((distance_to_store) => {\n      return stores.map((store) => {\n        if (store.name == Object.keys(distance_to_store)[0]) {\n          let profileLink = `/profile/${store.email}`;\n          let listingsLink = `${profileLink}#listings-from-store`;\n\n          return (\n            <Grid container spacing={8}>\n              <Grid item xs={7.5}>\n                <div\n                  className=\"store_information\"\n                  style={{ margin: \"2% 0\", width: \"100%\" }}\n                >\n                  <div className=\"store_picture\">\n                    <img width=\"100%\" height=\"300\" src={store.image}></img>\n                  </div>\n                  <h2 className=\"store_title\">{store.name}</h2>\n                  <h3 className=\"store_title\">\n                    Distance :{\" \"}\n                    <span style={{ fontWeight: \"bold\" }}>\n                      {convertToMiles(\n                        distance_to_store[Object.keys(distance_to_store)[0]]\n                      )}{\" \"}\n                      miles\n                    </span>\n                  </h3>\n                  <p className=\"store_location\">{store.location}</p>\n                  <p className=\"store_phone\">{store.phone}</p>\n                  <div className=\"store_information_buttons\">\n                    <Link className=\"store_links_1\" to={listingsLink}>\n                      View Listings\n                    </Link>\n                    <Link className=\"store_links_2\" to={profileLink}>\n                      Store Profile\n                    </Link>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={4.5}>\n                <div style={{ margin: \"2% 0\" }}>\n                  <MapContainer\n                    height=\"600px\"\n                    shelterName={userDetails.name}\n                    storeName={store.name}\n                    latlng1={{\n                      latitude: userDetails.latitude,\n                      longitude: userDetails.longitude,\n                    }}\n                    latlng2={{\n                      latitude: store.latitude,\n                      longitude: store.longitude,\n                    }}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          );\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getDistances();\n  }, []);\n\n  return (\n    <div className=\"hero\">\n      <Navbar />\n      <h1 className=\"section-title\" style={{ marginBottom: \"2%\" }}>\n        Find a Match\n      </h1>\n      <h2\n        className=\"section-title\"\n        style={{ textAlign: \"center\", marginBottom: \"2%\" }}\n      >\n        Here is a list of the best matches according to your location:\n      </h2>\n      {distances ? displayStores(distances) : null}\n    </div>\n  );\n};\n\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}