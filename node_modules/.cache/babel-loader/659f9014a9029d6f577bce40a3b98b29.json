{"ast":null,"code":"var _jsxFileName = \"/Users/trapbookpro/Development/hwfront/src/components/Store/SheltersMap.js\";\nimport React, { useEffect } from \"react\";\nimport { getAllShelters } from \"../../functions/index\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.setApiKey(\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\");\n\nclass SheltersMap extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shelterCoords: {},\n      isOpen: false,\n      loading: true\n    };\n    this.mapStyles = {\n      height: \"500px\",\n      width: \"100%\"\n    };\n  }\n\n  getShelterCoords() {\n    let resultsArray = [];\n    this.props.shelters.map(shelter => {\n      let obj = {\n        lat: shelter.latitude,\n        lng: shelter.longitude,\n        name: shelter.name\n      };\n      resultsArray.push(obj);\n    });\n    this.setState({\n      shelterCoords: resultsArray,\n      loading: false\n    });\n  }\n\n  async componentDidMount() {\n    this.getShelterCoords();\n  }\n\n  displayMarkers() {\n    return this.state.shelterCoords.map(shelterCoord => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        animation: \"DROP\",\n        position: {\n          lat: shelterCoord.lat,\n          lng: shelterCoord.lng\n        },\n        onClick: () => {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        },\n        children: this.state.isOpen ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: shelterCoord.lat,\n            lng: shelterCoord.lng\n          },\n          onCloseClick: () => this.setState({\n            isOpen: !this.state.isOpen\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: shelterCoord.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"section-title\",\n        children: \"Shelters Near You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"2% auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(LoadScript, {\n          googleMapsApiKey: \"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\",\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: this.mapStyles,\n            zoom: 11,\n            center: {\n              lat: this.props.userDetails.latitude,\n              lng: this.props.userDetails.longitude\n            },\n            children: [this.displayMarkers(), /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: this.props.userDetails.latitude,\n                lng: this.props.userDetails.longitude\n              },\n              onClick: () => {\n                this.setState({\n                  isOpen: !this.state.isOpen\n                });\n              },\n              onLoad: marker => {\n                const customIcon = opts => Object.assign({\n                  path: 'M12.75 0l-2.25 2.25 2.25 2.25-5.25 6h-5.25l4.125 4.125-6.375 8.452v0.923h0.923l8.452-6.375 4.125 4.125v-5.25l6-5.25 2.25 2.25 2.25-2.25-11.25-11.25zM10.5 12.75l-1.5-1.5 5.25-5.25 1.5 1.5-5.25 5.25z',\n                  fillColor: '#000000',\n                  fillOpacity: 1,\n                  strokeColor: '#000',\n                  strokeWeight: 1,\n                  scale: 1.3\n                }, opts);\n\n                marker.setIcon(customIcon({\n                  fillColor: 'green',\n                  strokeColor: 'white'\n                }));\n              },\n              children: this.state.isOpen ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n                position: {\n                  lat: this.props.userDetails.latitude,\n                  lng: this.props.userDetails.longitude\n                },\n                onCloseClick: () => this.setState({\n                  isOpen: !this.state.isOpen\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.props.userDetails.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 13\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : \"Loading...\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SheltersMap;","map":{"version":3,"sources":["/Users/trapbookpro/Development/hwfront/src/components/Store/SheltersMap.js"],"names":["React","useEffect","getAllShelters","GoogleMap","LoadScript","Marker","InfoWindow","Geocode","setLanguage","setRegion","setApiKey","SheltersMap","Component","state","shelterCoords","isOpen","loading","mapStyles","height","width","getShelterCoords","resultsArray","props","shelters","map","shelter","obj","lat","latitude","lng","longitude","name","push","setState","componentDidMount","displayMarkers","shelterCoord","render","margin","userDetails","marker","customIcon","opts","Object","assign","path","fillColor","fillOpacity","strokeColor","strokeWeight","scale","setIcon"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getAllShelters } from \"../../functions/index\";\n\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.setApiKey(\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\");\n\nclass SheltersMap extends React.Component {\n  state = {\n    shelterCoords: {},\n    isOpen: false,\n    loading: true,\n  };\n\n  mapStyles = {\n    height: \"500px\",\n    width: \"100%\",\n  };\n\n  getShelterCoords() {\n    let resultsArray = [];\n\n    this.props.shelters.map((shelter) => {\n      let obj = {\n        lat: shelter.latitude,\n        lng: shelter.longitude,\n        name: shelter.name,\n      };\n      resultsArray.push(obj);\n    });\n\n    this.setState({ shelterCoords: resultsArray, loading: false });\n  }\n\n  async componentDidMount() {\n    this.getShelterCoords();\n  }\n\n  displayMarkers() {\n    return this.state.shelterCoords.map((shelterCoord) => {\n      return (\n        <Marker\n         animation = \"DROP\"\n          position={{ lat: shelterCoord.lat, lng: shelterCoord.lng }}\n          onClick={() => {\n            this.setState({ isOpen: !this.state.isOpen });\n          }}\n          >\n\n          {this.state.isOpen ? (\n            <InfoWindow\n              position={{ lat: shelterCoord.lat, lng: shelterCoord.lng }}\n              onCloseClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            >\n              <p>{shelterCoord.name}</p>\n            </InfoWindow>\n          ) : null}\n\n        </Marker>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 class = \"section-title\">Shelters Near You</h2>\n        {!this.state.loading ? (\n          <div style={{ margin : \"2% auto\" }}>\n            <LoadScript googleMapsApiKey=\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\">\n              <GoogleMap\n                mapContainerStyle={this.mapStyles}\n                zoom={11}\n                center={{\n                  lat: this.props.userDetails.latitude,\n                  lng: this.props.userDetails.longitude,\n                }}\n              >\n                {this.displayMarkers()}\n                \n                        <Marker\n                position={{ lat: this.props.userDetails.latitude, lng: this.props.userDetails.longitude }}\n                onClick={() => {\n                    this.setState({ isOpen: !this.state.isOpen });\n                }}\n            onLoad={marker => {\n                const customIcon = (opts) => Object.assign({\n                path: 'M12.75 0l-2.25 2.25 2.25 2.25-5.25 6h-5.25l4.125 4.125-6.375 8.452v0.923h0.923l8.452-6.375 4.125 4.125v-5.25l6-5.25 2.25 2.25 2.25-2.25-11.25-11.25zM10.5 12.75l-1.5-1.5 5.25-5.25 1.5 1.5-5.25 5.25z',\n                fillColor: '#000000',\n                fillOpacity: 1,\n                strokeColor: '#000',\n                strokeWeight: 1,\n                scale: 1.3,\n                }, opts);\n\n            marker.setIcon(customIcon({\n              fillColor: 'green',\n              strokeColor: 'white'\n            }))}}\n          >\n\n          {this.state.isOpen ? (\n            <InfoWindow\n              position={{ lat: this.props.userDetails.latitude, lng: this.props.userDetails.longitude }}\n              onCloseClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            >\n              <p>{this.props.userDetails.name}</p>\n            </InfoWindow>\n          ) : null}\n\n        </Marker>\n              </GoogleMap>\n            </LoadScript>\n          </div>\n        ) : (\n          \"Loading...\"\n        )}\n        \n        <div className = \"border\" />\n      </div>\n    );\n  }\n}\n\nexport default SheltersMap;\n"]},"metadata":{},"sourceType":"module"}