[{"/Users/trapbookpro/Development/hunger-warrior/src/index.js":"1","/Users/trapbookpro/Development/hunger-warrior/src/App.js":"2","/Users/trapbookpro/Development/hunger-warrior/src/reportWebVitals.js":"3","/Users/trapbookpro/Development/hunger-warrior/src/fire.js":"4","/Users/trapbookpro/Development/hunger-warrior/src/components/AllRequests.js":"5","/Users/trapbookpro/Development/hunger-warrior/src/components/AllListings.js":"6","/Users/trapbookpro/Development/hunger-warrior/src/components/Login.js":"7","/Users/trapbookpro/Development/hunger-warrior/src/components/AllOrders.js":"8","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/CreateNewOrder.js":"9","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/ViewOrder.js":"10","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Profile.js":"11","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/ViewRequest.js":"12","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/StoreHome.js":"13","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/CreateNewListing.js":"14","/Users/trapbookpro/Development/hunger-warrior/src/functions/index.js":"15","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ViewOrder.js":"16","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ShelterHome.js":"17","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/CreateRequest.js":"18","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Requests.js":"19","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Listings.js":"20","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Requests.js":"21","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Listings.js":"22","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Orders.js":"23","/Users/trapbookpro/Development/hunger-warrior/src/components/Navbar.js":"24","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Orders.js":"25","/Users/trapbookpro/Development/hunger-warrior/src/components/Table.js":"26","/Users/trapbookpro/Development/hunger-warrior/src/components/Footer.js":"27","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ProgressBar.js":"28","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Card2.js":"29","/Users/trapbookpro/Development/hunger-warrior/src/components/Map.js":"30","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/SupportedStores.js":"31","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Card2.js":"32","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Card.js":"33","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Card.js":"34","/Users/trapbookpro/Development/hwfront/src/index.js":"35","/Users/trapbookpro/Development/hwfront/src/App.js":"36","/Users/trapbookpro/Development/hwfront/src/reportWebVitals.js":"37","/Users/trapbookpro/Development/hwfront/src/fire.js":"38","/Users/trapbookpro/Development/hwfront/src/components/Login.js":"39","/Users/trapbookpro/Development/hwfront/src/components/AllListings.js":"40","/Users/trapbookpro/Development/hwfront/src/components/AllOrders.js":"41","/Users/trapbookpro/Development/hwfront/src/functions/index.js":"42","/Users/trapbookpro/Development/hwfront/src/components/AllRequests.js":"43","/Users/trapbookpro/Development/hwfront/src/components/Shelter/ViewOrder.js":"44","/Users/trapbookpro/Development/hwfront/src/components/Store/CreateNewListing.js":"45","/Users/trapbookpro/Development/hwfront/src/components/Store/ViewRequest.js":"46","/Users/trapbookpro/Development/hwfront/src/components/Store/Profile.js":"47","/Users/trapbookpro/Development/hwfront/src/components/Store/StoreHome.js":"48","/Users/trapbookpro/Development/hwfront/src/components/Shelter/ShelterHome.js":"49","/Users/trapbookpro/Development/hwfront/src/components/Shelter/CreateRequest.js":"50","/Users/trapbookpro/Development/hwfront/src/components/Shelter/CreateNewOrder.js":"51","/Users/trapbookpro/Development/hwfront/src/components/Store/ViewOrder.js":"52","/Users/trapbookpro/Development/hwfront/src/components/Navbar.js":"53","/Users/trapbookpro/Development/hwfront/src/components/Store/Orders.js":"54","/Users/trapbookpro/Development/hwfront/src/components/Store/Listings.js":"55","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Orders.js":"56","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Listings.js":"57","/Users/trapbookpro/Development/hwfront/src/components/Shelter/ProgressBar.js":"58","/Users/trapbookpro/Development/hwfront/src/components/Store/Requests.js":"59","/Users/trapbookpro/Development/hwfront/src/components/Map.js":"60","/Users/trapbookpro/Development/hwfront/src/components/Shelter/SupportedStores.js":"61","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Requests.js":"62","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Card2.js":"63","/Users/trapbookpro/Development/hwfront/src/components/Table.js":"64","/Users/trapbookpro/Development/hwfront/src/components/Footer.js":"65","/Users/trapbookpro/Development/hwfront/src/components/Store/Card.js":"66","/Users/trapbookpro/Development/hwfront/src/components/Store/Card2.js":"67","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Card.js":"68","/Users/trapbookpro/Development/hwfront/src/components/Store/Financials.js":"69","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Match.js":"70","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Financials.js":"71","/Users/trapbookpro/Development/hwfront/src/components/Store/SheltersMap.js":"72"},{"size":544,"mtime":1638490213138,"results":"73","hashOfConfig":"74"},{"size":7797,"mtime":1638490213120,"results":"75","hashOfConfig":"74"},{"size":362,"mtime":1638490213138,"results":"76","hashOfConfig":"74"},{"size":733,"mtime":1638492851349,"results":"77","hashOfConfig":"74"},{"size":823,"mtime":1638490213121,"results":"78","hashOfConfig":"74"},{"size":1011,"mtime":1638490213121,"results":"79","hashOfConfig":"74"},{"size":3800,"mtime":1638490213121,"results":"80","hashOfConfig":"74"},{"size":962,"mtime":1638490213121,"results":"81","hashOfConfig":"74"},{"size":3087,"mtime":1638490213122,"results":"82","hashOfConfig":"74"},{"size":3978,"mtime":1638490213124,"results":"83","hashOfConfig":"74"},{"size":4315,"mtime":1638490213124,"results":"84","hashOfConfig":"74"},{"size":2894,"mtime":1638490213124,"results":"85","hashOfConfig":"74"},{"size":1897,"mtime":1638490213124,"results":"86","hashOfConfig":"74"},{"size":1882,"mtime":1638490213123,"results":"87","hashOfConfig":"74"},{"size":7830,"mtime":1638631067727,"results":"88","hashOfConfig":"74"},{"size":3084,"mtime":1638490213123,"results":"89","hashOfConfig":"74"},{"size":1957,"mtime":1638490213122,"results":"90","hashOfConfig":"74"},{"size":2934,"mtime":1638490213122,"results":"91","hashOfConfig":"74"},{"size":1850,"mtime":1638490213124,"results":"92","hashOfConfig":"74"},{"size":1985,"mtime":1638490213122,"results":"93","hashOfConfig":"74"},{"size":1820,"mtime":1638490213122,"results":"94","hashOfConfig":"74"},{"size":2397,"mtime":1638490213123,"results":"95","hashOfConfig":"74"},{"size":1829,"mtime":1638490213123,"results":"96","hashOfConfig":"74"},{"size":1215,"mtime":1638490213121,"results":"97","hashOfConfig":"74"},{"size":1790,"mtime":1638490213122,"results":"98","hashOfConfig":"74"},{"size":2533,"mtime":1638490213124,"results":"99","hashOfConfig":"74"},{"size":1519,"mtime":1638490213121,"results":"100","hashOfConfig":"74"},{"size":1137,"mtime":1638490213122,"results":"101","hashOfConfig":"74"},{"size":1569,"mtime":1638490213122,"results":"102","hashOfConfig":"74"},{"size":2778,"mtime":1638490213121,"results":"103","hashOfConfig":"74"},{"size":1269,"mtime":1638490213123,"results":"104","hashOfConfig":"74"},{"size":1409,"mtime":1638490213123,"results":"105","hashOfConfig":"74"},{"size":5541,"mtime":1638490213123,"results":"106","hashOfConfig":"74"},{"size":7403,"mtime":1638490213122,"results":"107","hashOfConfig":"74"},{"size":628,"mtime":1638640813649,"results":"108","hashOfConfig":"109"},{"size":7925,"mtime":1638640813636,"results":"110","hashOfConfig":"109"},{"size":362,"mtime":1638640813650,"results":"111","hashOfConfig":"109"},{"size":733,"mtime":1638641154035,"results":"112","hashOfConfig":"109"},{"size":4040,"mtime":1638640813637,"results":"113","hashOfConfig":"109"},{"size":991,"mtime":1638640813637,"results":"114","hashOfConfig":"109"},{"size":962,"mtime":1638640813637,"results":"115","hashOfConfig":"109"},{"size":8841,"mtime":1638640813644,"results":"116","hashOfConfig":"109"},{"size":823,"mtime":1638640813637,"results":"117","hashOfConfig":"109"},{"size":3944,"mtime":1638640813638,"results":"118","hashOfConfig":"109"},{"size":2271,"mtime":1638640813639,"results":"119","hashOfConfig":"109"},{"size":3591,"mtime":1638640813639,"results":"120","hashOfConfig":"109"},{"size":4429,"mtime":1638640813639,"results":"121","hashOfConfig":"109"},{"size":2012,"mtime":1638640813639,"results":"122","hashOfConfig":"109"},{"size":2456,"mtime":1638640813638,"results":"123","hashOfConfig":"109"},{"size":3531,"mtime":1638640813638,"results":"124","hashOfConfig":"109"},{"size":3155,"mtime":1638640813638,"results":"125","hashOfConfig":"109"},{"size":6341,"mtime":1638640813639,"results":"126","hashOfConfig":"109"},{"size":591,"mtime":1638640813637,"results":"127","hashOfConfig":"109"},{"size":2024,"mtime":1638640813639,"results":"128","hashOfConfig":"109"},{"size":2401,"mtime":1638640813639,"results":"129","hashOfConfig":"109"},{"size":1987,"mtime":1638640813638,"results":"130","hashOfConfig":"109"},{"size":1993,"mtime":1638640813638,"results":"131","hashOfConfig":"109"},{"size":1137,"mtime":1638640813638,"results":"132","hashOfConfig":"109"},{"size":1836,"mtime":1638640813639,"results":"133","hashOfConfig":"109"},{"size":3185,"mtime":1638640813637,"results":"134","hashOfConfig":"109"},{"size":1325,"mtime":1638640813638,"results":"135","hashOfConfig":"109"},{"size":1952,"mtime":1638640813638,"results":"136","hashOfConfig":"109"},{"size":1815,"mtime":1638640813638,"results":"137","hashOfConfig":"109"},{"size":4654,"mtime":1638640813639,"results":"138","hashOfConfig":"109"},{"size":1519,"mtime":1638640813637,"results":"139","hashOfConfig":"109"},{"size":5350,"mtime":1638640813638,"results":"140","hashOfConfig":"109"},{"size":1409,"mtime":1638640813638,"results":"141","hashOfConfig":"109"},{"size":7346,"mtime":1638640813637,"results":"142","hashOfConfig":"109"},{"size":1411,"mtime":1638640813639,"results":"143","hashOfConfig":"109"},{"size":4384,"mtime":1638640813638,"results":"144","hashOfConfig":"109"},{"size":1647,"mtime":1638640813638,"results":"145","hashOfConfig":"109"},{"size":3690,"mtime":1638640813639,"results":"146","hashOfConfig":"109"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},"wnowr3",{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"149"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"149"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"149"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"149"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"149"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"149"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"149"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"149"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"149"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"149"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"149"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"149"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"149"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"149"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"149"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"149"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"149"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"149"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"149"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"149"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"149"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"149"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"149"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n3c62l",{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},"/Users/trapbookpro/Development/hunger-warrior/src/index.js",[],["343","344"],"/Users/trapbookpro/Development/hunger-warrior/src/App.js",["345","346","347","348","349","350","351","352"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport Login from \"./components/Login\";\nimport HomePage from \"./components/Dashboard\";\nimport { getAllStores, getUserDetails, getAllStores2 } from \"./functions/index\";\nimport ViewOrder from \"./components/Shelter/ViewOrder\";\nimport { ViewOrder as ViewOrderForStore } from \"./components/Store/ViewOrder\";\nimport Profile from \"./components/Store/Profile\";\nimport CreateListing from \"./components/Store/CreateNewListing\";\n\n// backend\nimport {\n  handleLogin,\n  handleLogout,\n  authListener,\n  handleSignUp,\n} from \"./functions/index\";\nimport StoreHome from \"./components/Store/StoreHome\";\nimport ShelterHome from \"./components/Shelter/ShelterHome\";\nimport Tax from \"./components/Tax\";\nimport History from \"./components/History\";\nimport CreateRequest from \"./components/Shelter/CreateRequest\";\nimport CreateNewOrder from \"./components/Shelter/CreateNewOrder\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n  withRouter,\n} from \"react-router-dom\";\nimport AllListings from \"./components/AllListings\";\nimport AllOrders from \"./components/AllOrders\";\nimport ViewRequest from \"./components/Store/ViewRequest\";\nimport AllRequests from \"./components/AllRequests\";\n\n// function\nconst App = () => {\n  // state variables\n  /*\n  'useState' Usage: \n  const [VARIABLE_NAME, FUNCTION_TO_CHANGE_THE_VARIABLE] = useState(INITIAL_VARIABLE_VALUE)\n  */\n  const [user, setUser] = useState(\"\");\n  const [userDetails, setUserDetails] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n  const [stores, setStores] = useState([{}]);\n  const [loading, setLoading] = useState(true);\n  const [isUser, setIsUser] = useState(false);\n\n  // clear text inputs\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  // clear errors\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  //useEffect runs as soon as the page loads\n  useEffect(() => {\n    authListener(setUser, setLoading, setUserDetails);\n    getAllStores2(setStores);\n    // check if a user is already logged in so that we know which page to display\n  }, []);\n\n  useEffect(() => {\n    if (isUser == true) {\n      getUserDetails(email, setUserDetails);\n    }\n  }, [isUser]);\n\n  return (\n    <div className=\"App\">\n      <section className=\"banner\">\n        <h1 className=\"title\">HUNGER WARRIOR</h1>\n      </section>\n\n      {loading ? (\n        <div className=\"loader\"></div>\n      ) : !user ? (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n          setEmailError={setEmailError}\n          setPasswordError={setPasswordError}\n          userDetails={userDetails}\n          setUserDetails={setUserDetails}\n          setIsUser={setIsUser}\n          setUser={setUser}\n        />\n      ) : userDetails.type === \"Shelter\" ? (\n        <Router>\n          <Switch>\n            <Route path=\"/tax\" component={withRouter(Tax)} />\n            <Route path=\"/history\" component={withRouter(History)} />\n            <Route\n              exact\n              path=\"/order/:id\"\n              component={() => (\n                <CreateNewOrder\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/request\"\n              component={() => (\n                <CreateRequest\n                  user={user}\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  stores={stores}\n                />\n              )}\n            />\n            <Route path=\"/listings\" component={withRouter(AllListings)} />\n            <Route\n              path=\"/allOrders\"\n              component={() => (\n                <AllOrders\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Shelter\"\n                />\n              )}\n            />\n            <Route\n              path=\"/vieworder/:id\"\n              component={() => (\n                <ViewOrder\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/allRequests\"\n              component={() => (\n                <AllRequests\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Shelter\"\n                />\n              )}\n            />\n            <Route\n              path=\"/profile/:email\"\n              component={() => <Profile userDetails={userDetails} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <ShelterHome\n                  user={user}\n                  handleLogout={handleLogout}\n                  userDetails={userDetails}\n                  stores={stores}\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n      ) : (\n        <Router>\n          <Switch>\n            <Route path=\"/tax\" component={withRouter(Tax)} />\n            <Route path=\"/history\" component={withRouter(History)} />\n            <Route\n              path=\"/allOrders\"\n              component={() => (\n                <AllOrders\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Store\"\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <StoreHome\n                  user={user}\n                  handleLogout={handleLogout}\n                  userDetails={userDetails}\n                />\n              )}\n            />\n            <Route\n              path=\"/newlisting\"\n              component={() => (\n                <CreateListing\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/vieworder/:id\"\n              component={() => (\n                <ViewOrderForStore\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/viewrequest/:id\"\n              component={() => (\n                <ViewRequest\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/listings\"\n              component={() => (\n                <AllListings\n                  store_email={userDetails.email}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/allRequests\"\n              component={() => (\n                <AllRequests\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Store\"\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n      )}\n      {/* Check if a user is logged in. If so, display homepage. Else, display login page*/}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/trapbookpro/Development/hunger-warrior/src/reportWebVitals.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/fire.js",["353"],"// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/compat'; \nimport { initializeApp } from \"firebase/compat/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD2LyJPjaZDcGW05ZJDRdI1MP91QvhORx0\",\n  authDomain: \"hunger-warrior-a9839.firebaseapp.com\",\n  projectId: \"hunger-warrior-a9839\",\n  storageBucket: \"hunger-warrior-a9839.appspot.com\",\n  messagingSenderId: \"473158672655\",\n  appId: \"1:473158672655:web:d49b12ad8d4fab269e5e7a\"\n};\n\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire; ","/Users/trapbookpro/Development/hunger-warrior/src/components/AllRequests.js",["354","355"],"import React, {useState, useEffect} from 'react'; \nimport {displayRequests as displayRequestsForStore} from './Store/Requests'; \nimport {displayRequests} from './Shelter/Requests'; \nimport {getRequests2} from '../functions/index'; \nimport Navbar from \"./Navbar\";\n\nconst AllRequests = (props) => {\n    const { userDetails, role } = props; \n    const [requests, setRequests] = useState({}); \n\n    useEffect(() => {\n        getRequests2(userDetails.email, setRequests)\n    }, [])    \n\n    return (\n        <div className = \"hero\">\n            <Navbar />        \n            <h1 className=\"section-title\" style = {{marginBottom: '2%'}}>All Requests</h1>\n            {requests ? role == \"Store\" ? displayRequestsForStore(requests, '') : displayRequests(requests, '') : null}\n        </div>\n    )\n\n}\n\nexport default AllRequests; ","/Users/trapbookpro/Development/hunger-warrior/src/components/AllListings.js",["356","357"],"import React, {useState, useEffect} from 'react'; \nimport { displayListings } from './Shelter/Listings'; \nimport {displayListings as displayListingsForStore } from './Store/Listings'; \nimport { getAllListings2, getShelterRequests } from \"../functions/index\";\nimport Navbar from \"./Navbar\";\n\n\nconst AllListings = (props) => {\n    const { store_email } = props; \n    \n    const [listings, setListings] = useState([{}]);\n    const [isStore, setIsStore] = useState(false); \n    \n    useEffect(() => {\n        if (store_email){\n            getAllListings2(store_email, setListings); \n            setIsStore(true); \n        }\n        else {\n            getAllListings2(\"\", setListings);\n        }\n      }, []);\n\n    return (\n        <div className = \"hero\">\n            <Navbar />\n            <h1 className=\"section-title\" style = {{marginBottom: '2%'}}>All Listings</h1>\n            {isStore? displayListingsForStore(listings, '') : displayListings(listings, '')}\n        </div>\n    )\n}\n\nexport default AllListings; ","/Users/trapbookpro/Development/hunger-warrior/src/components/Login.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/components/AllOrders.js",["358"],"import React, {useState, useEffect} from 'react'; \nimport { displayOrders } from './Store/Orders';\nimport { displayOrders as displayOrdersForShelter} from './Shelter/Orders';  \nimport { getOrders2 } from \"../functions/index\";\nimport Navbar from \"./Navbar\";\nimport Grid from \"@mui/material/Grid\";\n\n\nconst AllOrders = (props) => {\n    const {userDetails, role} = props; \n    const [orders, setOrders] = useState([{}]);\n\n\n    useEffect(() => {\n        getOrders2(userDetails.email, setOrders);\n      }, []);\n\n    return (\n        <div className = \"hero\">\n            <Navbar />        \n            <h1 className=\"section-title\" style = {{marginBottom: '2%'}}>All Orders</h1>\n            <Grid container spacing={3} style={{ marginTop: \"2%\" }}>\n            <Grid item xs={12}>\n                {role === 'Shelter' ? displayOrdersForShelter(orders, '') : displayOrders(orders, '')}\n            </Grid>\n            </Grid>\n    </div>\n    )\n}\n\nexport default AllOrders; ","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/CreateNewOrder.js",["359","360","361"],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport {\n  getListingById2,\n  getUserDetails,\n  handleNewOrder2,\n} from \"../../functions/index\";\nimport MapContainer from \"../Map\";\n\nconst CreateNewOrder = (props) => {\n  const history = useHistory();\n\n  const { handleLogout, userDetails } = props;\n  const { id } = useParams();\n  const [listing, setListing] = useState({});\n  const [store, setStore] = useState({});\n\n  useEffect(async () => {\n    await getListingById2(id, setListing);\n  }, []);\n\n\n  useEffect(async () => {\n    if (listing) {\n      await getUserDetails(listing.store_email, setStore);\n    }\n  }, [listing]);\n\n  const handleSubmit = () => {\n    const order_details = {\n      listing_id: id,\n      ordered_by: userDetails.email,\n      shelter_name : userDetails.name,\n      ordered_date: new Date(),\n      order_status: \"Order Sent\",\n      ...listing,\n    };\n    \n    handleNewOrder2(order_details);\n    history.push(\"/\");\n  };\n\n\n  // AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Your order</h1>\n      <div\n        className=\"order-container\"\n        style={{ display: \"block\", width: \"100%\", margin: \"2% auto\" }}\n      >\n        <div className=\"map\" style={{ margin: \"0 auto\" }}>\n          {console.log(\"Location HERE: \", store ? store.location : \"not yet\")}\n          {store && store.location ? (\n            <MapContainer address={store.location} storeName={store.name} />\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n        <div\n          className=\"order-details\"\n          style={{\n            margin: \"3% auto\",\n            width: \"100%\",\n            background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n              store ? store.image : null\n            })`,\n          }}\n        >\n          <h2 className=\"order-listing-title\">{listing.name}</h2>\n          <h3 className=\"order-listing-title2\">{listing.store_name}</h3>\n          <h4 className=\"order-listing-details\">\n            Store Email : {listing.store_email}\n          </h4>\n          <h4 className=\"order-listing-details\">\n            Store Phone : {store ? store.phone : \"Loading...\"}\n          </h4>\n          <h4 className=\"order-listing-details\">\n            Store Location : {store ? store.location : \"Loading...\"}\n          </h4>\n\n          <h5 className=\"order-listing-details\">\n            Quantity : {listing.quantity}\n          </h5>\n        </div>\n      </div>\n\n      <div className=\"store_information_buttons\">\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          Confirm Order\n        </button>\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateNewOrder;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/ViewOrder.js",["362","363","364","365"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport StepProgressBar from \"../Shelter/ProgressBar\";\nimport {\n  getOrder2,\n  getUserDetails,\n  handleStatusChange,\n  handleStatusChange2,\n} from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\n\nexport const ViewOrder = (props) => {\n  const { userDetails, handleLogout } = props;\n  const [order, setOrder] = useState({});\n  const [shelter, setShelter] = useState({});\n  const [request_status, setRequest_status] = useState(\"\");\n\n  const { id } = useParams();\n\n  let progress;\n\n  const nextRequestStatus = (current_request_status) => {\n    if (current_request_status === \"Order Sent\") {\n      setRequest_status(\"Shipped\");\n    } else if (current_request_status === \"Shipped\") {\n      setRequest_status(\"Delivered\");\n    }\n  };\n\n  const handleOnClick = async () => {\n    await handleStatusChange2(id, request_status);\n    await getOrder2(id, setOrder);\n  };\n\n  useEffect(async () => {\n    await getOrder2(id, setOrder);\n  }, [request_status]);\n\n  useEffect(async () => {\n    await getUserDetails(order.ordered_by, setShelter);\n    nextRequestStatus(order.order_status);\n  }, [order]);\n\n  const calculateProgress = () => {\n    if (order) {\n      if (order.order_status === \"Order Sent\") {\n        progress = 25;\n      } else if (order.order_status  === \"Shipped\") {\n        progress = 75;\n      } else if (order.order_status === \"Delivered\") {\n        progress = 100;\n      } else {\n        progress = 0;\n      }\n    }\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Order Details</h1>\n      <div className=\"map-view-order\">\n        {shelter.location && order ? (\n          <MapContainer\n            address={userDetails.location}\n            address2={shelter.location}\n            storeName={order.store_name}\n            shelterName={shelter.name}\n            onClick={() => {\n              console.log(\"clickled\");\n            }}\n          />\n        ) : (\n          <h2>Loading Maps...</h2>\n        )}\n      </div>\n\n      <div className=\"progress-bar\">\n        {calculateProgress()}\n\n        <StepProgressBar progress={progress} />\n\n        <div\n          className=\"progressbar-labels\"\n          style={{ display: \"inline-flex\", marginTop: \"4%\" }}\n        >\n          <p className=\"progressbar-label progressbar-label1\">Ordered</p>\n          <p className=\"progressbar-label progressbar-label2\">Shipped</p>\n          <p className=\"progressbar-label progressbar-label3\">Delivered</p>\n        </div>\n\n        <div className=\"buttons\" style={{ marginTop: \"5%\" }}>\n          {order.order_status !== \"Delivered\" ? (\n            <button\n              onClick={() => {\n                handleOnClick();\n              }}\n              className=\"mark-as-button\"\n            >\n              Mark as {request_status}\n            </button>\n          ) : null}\n        </div>\n      </div>\n\n      <div\n        className=\"order-details\"\n        style={{\n          margin: \"3% auto\",\n          width: \"60%\",\n          background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n            shelter ? (shelter.image ? shelter.image : null) : null\n          })`,\n        }}\n      >\n        <h2 className=\"order-listing-title\">{order.name}</h2>\n        <h3 className=\"order-listing-title2\">\n          {shelter ? shelter.name : \"Loading...\"}\n        </h3>\n        <h4 className=\"order-listing-details\">\n          Shelter Email : {shelter ? shelter.email : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Shelter Phone : {shelter ? shelter.phone : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Shelter Location : {shelter ? shelter.location : \"Loading...\"}\n        </h4>\n        <h5 className=\"order-listing-details\">Quantity : {order.quantity}</h5>\n      </div>\n    </div>\n  );\n};\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Profile.js",["366","367","368","369","370","371","372"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { getOrder2, getOrders2, getUserDetails } from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\nimport Grid from \"@mui/material/Grid\";\nimport {getAllListings2} from '../../functions/index'; \nimport BasicTable from '../Table';\nimport MediaCard2 from \"../Shelter/Card2\";\nimport {Link} from 'react-router-dom';\n\nconst Profile = (props) => {\n    const { email } = useParams();\n    const { userDetails } = props; \n    const [storeDetails, setStoreDetails] = useState({})\n    const [listings, setListings] = useState({})\n    const [orders, setOrders] = useState({}) \n\n    const formatListings = (listings) => {\n        let arr = []; \n        for (const [key, value] of Object.entries(listings)) {\n          arr.push(value)\n        }\n    \n        return arr; \n      }\n\n\n    const filterOrders = (orders) => {\n        let orders_with_store = []; \n\n        orders.map(order => {\n            if (order.store_email == storeDetails.email){\n                orders_with_store.push(order)\n            }\n        })\n\n        return orders_with_store; \n    }\n\n    useEffect(async () => {\n        await getUserDetails(email, setStoreDetails);\n        if (storeDetails){\n            await getAllListings2(storeDetails.email, setListings)\n        }\n        if (storeDetails){\n            await getOrders2(userDetails.email, setOrders)\n        }\n    }, [storeDetails])\n\n    \n    return (\n        <div className = \"hero\">\n            <Navbar />\n            {storeDetails && storeDetails.location ? \n            <div>\n            <h1 className = \"section-title\" style = {{marginBottom : '2%'}}>{storeDetails.name}</h1>\n            <Grid container spacing = {8}>\n                <Grid item xs = {9}>\n                    <div>\n                        <img width = '100%' height = \"500\" src = {storeDetails.image} />\n                    </div>\n                </Grid>\n\n                <Grid item xs = {3}>\n                <div className = \"profile-map\" style = {{}}>\n                        <MapContainer\n                            address={storeDetails.location}\n                            storeName={storeDetails.name}\n                            width='100%'\n                        />\n                </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing = {8} style = {{marginBottom: '2.5%'}}>\n                  <Grid item xs = {9}>\n                    <h2 className = \"section-title\" style = {{marginBottom : '2%'}}>Available Listings From {storeDetails.name}</h2>\n                    {listings && Object.keys(listings).length > 0 ? <BasicTable columns = {['Quantity', 'View Details']} rows = {formatListings(listings)}/> : 'No Listings Available'}\n                  </Grid>\n                  <Grid item xs = {3}>\n                      <div className = \"store_information\" style = {{height : '100%'}}>\n                          <h2 className = \"section-title\" style = {{marginBottom: '20px'}}>Store Details</h2>\n                          <p style = {{marginBottom : '10px'}}>Email: <span style = {{fontWeight : 'bold'}}>{storeDetails.email}</span></p>\n                          <p style = {{marginBottom : '10px'}}>Phone: {storeDetails.phone}</p>\n                          <p style = {{marginBottom : '10px'}}>Address: {storeDetails.location}</p>\n                      </div>\n                  </Grid>\n              </Grid>\n\n              <Grid container spacing = {8} style ={{marginBottom : '4%'}}>\n                  <Grid item xs = {9}>\n                      <h2 className = \"section-title\" style = {{marginBottom: '2%'}}>Order History</h2>\n                        {orders && orders.length > 0 ? <BasicTable columns = {['Quantity', 'Order Date', 'Status', 'View Details']} rows = {filterOrders(orders)} /> : \"No order history.\"}\n                  </Grid>\n                  <Grid item xs = {3}>\n                  <Link to=\"/request\" style={{ textDecoration: \"None\", textAlign: 'center'}} >\n                        <MediaCard2 width = '100%' name={`Send a Request for an Item`} icon=\"plus\" />\n                  </Link>\n                  </Grid>\n              </Grid>\n\n         </div>\n        : null}\n        </div>\n    )\n}\n\nexport default Profile; ","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/ViewRequest.js",["373"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  getRequestById2,\n  handleNewOrder2,\n  handleRequestStatusChange2,\n} from \"../../functions/index\";\nimport Navbar from \"../Navbar\";\n\nconst ViewRequest = (props) => {\n  const { id } = useParams();\n  const { handleLogout, userDetails } = props;\n  const [request, setRequest] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    getRequestById2(id, setRequest);\n  }, []);\n\n  const handleConfirm = async () => {\n    const newOrder = {\n      date: new Date(),\n      name: request.item_name,\n      order_status: \"Order Sent\",\n      ordered_by: request.shelter_email,\n      ordered_date: new Date(),\n      quantity: request.item_quantity,\n      shelter_name: request.shelter_name,\n      store_email: userDetails.email,\n      store_name: userDetails.name,\n    };\n\n    await handleNewOrder2(newOrder);\n    await handleRequestStatusChange2(id, \"Request Accepted\");\n\n    history.push(\"/\");\n  };\n\n  const handleDecline = async () => {\n    await handleRequestStatusChange2(id, \"Request Declined\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Request Details</h1>\n      <div\n        className=\"order-details\"\n        style={{\n          margin: \"3% auto\",\n          width: \"60%\",\n          background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url()`,\n        }}\n      >\n        <h2 className=\"order-listing-title\">{request.item_name}</h2>\n        <h3 className=\"order-listing-title2\">\n          {request ? request.shelter_name : \"Loading...\"}\n        </h3>\n        <h4 className=\"order-listing-details\">\n          Shelter Email : {request ? request.shelter_email : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Request Date :{\" \"}\n          {request && request.request_date\n            ? new Date(request.request_date.seconds * 1000)\n                .toString()\n                .slice(0, 15)\n            : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Request Status : {request.request_status}\n        </h4>\n        <h5 className=\"order-listing-details\">\n          Quantity : {request.item_quantity}\n        </h5>\n      </div>\n      <div\n        className=\"store_information_buttons\"\n        style={{ width: \"40%\", margin: \"0 30%\" }}\n      >\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            handleConfirm();\n          }}\n        >\n          Accept Request\n        </button>\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            handleDecline();\n          }}\n        >\n          Decline Request\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewRequest;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/StoreHome.js",["374","375","376"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport {\n  deleteListing2,\n  getAllListings2,\n  getRequests2,\n  getOrders2\n} from \"../../functions/index\";\nimport Footer from \"../Footer\";\nimport FormatQuoteIcon from '@mui/icons-material/FormatQuote';\nimport Orders from './Orders'; \nimport Listings from \"./Listings\";\nimport Requests from \"./Requests\";\n\n\nexport let displayListings = () => {};\n\nconst ShelterHome = (props) => {\n  const { user, handleLogout, userDetails, stores } = props;\n  const [orders, setOrders] = useState([{}]);\n  const [listings, setListings] = useState([{}]);\n  const [requests, setRequests] = useState([]);\n\n  useEffect(async () => {\n    await getAllListings2(userDetails.email, setListings);\n    await getRequests2(userDetails.email, setRequests);\n    await getOrders2(userDetails.email, setOrders, 'Store');\n  }, []);\n\n\n  const handleListingDelete = async (id) => {\n    if (window.confirm('Are you sure you want to delete this listing?')){\n        deleteListing2(id); \n        await getAllListings2(userDetails.email, setListings); \n    }\n  }\n\n  return (\n    <div className=\"hero\" style={{ marginTop: \"2%\" }}>\n      <Navbar\n        user={user}\n        userDetails={userDetails}\n        handleLogout={handleLogout}\n      />\n     <div className = \"banner-after-nav\">\n          <h1 className = \"banner-title\">Welcome, {userDetails.name}!</h1>\n          <div className = \"quote\" style = {{display : 'inline-flex'}}>\n            <FormatQuoteIcon />\n            <h4 className = \"banner-quote\">Hunger is not an issue of charity. It's an issue of Justice.</h4>\n            <FormatQuoteIcon />\n            </div>\n      </div>\n      <Orders orders = {orders}/>\n      <Listings listings = {listings} handleDelete = {handleListingDelete}/>\n      <Requests requests = {requests} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ShelterHome;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/CreateNewListing.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/functions/index.js",["377","378","379","380","381"],"/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ViewOrder.js",["382","383","384"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport StepProgressBar from \"./ProgressBar\";\nimport { getOrder2, getUserDetails } from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\n\nconst ViewOrder = (props) => {\n  const { userDetails, handleLogout } = props;\n  const [order, setOrder] = useState({});\n  const [store, setStore] = useState({});\n  const { id } = useParams();\n  let progress;\n\n  useEffect(async () => {\n    await getOrder2(id, setOrder);\n  }, []);\n\n  console.log(order);\n\n  useEffect(async () => {\n    if (order){\n      await getUserDetails(order.store_email, setStore);\n\n    }\n  }, [order]);\n\n  console.log(store);\n\n  const calculateProgress = () => {\n    if (order) {\n      if (order.order_status === \"Order Sent\") {\n        progress = 25;\n      } else if (order.order_status === \"Shipped\") {\n        progress = 75;\n      } else if (order.order_status === \"Delivered\") {\n        progress = 100;\n      } else {\n        progress = 0;\n      }\n    }\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Order Details</h1>\n      <div className=\"map-view-order\">\n        {store.location && order ? (\n\n          <MapContainer\n            address={userDetails.location}\n            address2={store.location}\n            storeName={store.name}\n            shelterName={userDetails.name}\n            onClick={() => {\n              console.log(\"clickled\");\n            }}\n          />\n        ) : (\n          <h2>Loading Maps...</h2>\n        )}\n      </div>\n\n      <div className=\"progress-bar\">\n        {calculateProgress()}\n\n        <StepProgressBar progress={progress} />\n\n        <div\n          className=\"progressbar-labels\"\n          style={{ display: \"inline-flex\", marginTop: \"4%\" }}\n        >\n          <p className=\"progressbar-label progressbar-label1\">Ordered</p>\n          <p className=\"progressbar-label progressbar-label2\">Shipped</p>\n          <p className=\"progressbar-label progressbar-label3\">Delivered</p>\n        </div>\n      </div>\n\n      <div\n        className=\"order-details\"\n        style={{\n          margin: \"3% auto\",\n          width: \"60%\",\n          background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n            store ? store.image : null\n          })`,\n        }}\n      >\n        <h2 className=\"order-listing-title\">{order.name}</h2>\n        <h3 className=\"order-listing-title2\">\n          {store ? store.name : \"Loading...\"}\n        </h3>\n        <h4 className=\"order-listing-details\">\n          Store Email : {store ? store.email : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Store Phone : {store ? store.phone : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Store Location : {store ? store.location : \"Loading...\"}\n        </h4>\n        <h5 className=\"order-listing-details\">Quantity : {order.quantity}</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewOrder;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ShelterHome.js",["385","386"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport {\n  deleteRequest2,\n  getAllListings2,\n  getOrders2,\n  getRequests2\n} from \"../../functions/index\";\nimport Footer from \"../Footer\";\nimport SupportedStores from \"./SupportedStores\";\nimport Listings from \"./Listings\";\nimport Requests from \"./Requests\";\nimport Orders from \"./Orders\";\nimport FormatQuoteIcon from \"@mui/icons-material/FormatQuote\";\n\nexport let displayListings = () => {};\n\nconst ShelterHome = (props) => {\n  const { user, handleLogout, userDetails, stores } = props;\n  const [orders, setOrders] = useState([{}]);\n  const [listings, setListings] = useState([{}]);\n  const [requests, setRequests] = useState([]);\n\n  useEffect(async () => {\n    await getAllListings2(\"\", setListings);\n    await getRequests2(userDetails.email, setRequests);\n    await getOrders2(userDetails.email, setOrders);\n  }, []);\n\n  const handleDeleteRequest = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this request?\")) {\n      deleteRequest2(id);\n      await getRequests2(userDetails.email, setRequests);\n    }\n  };\n\n  return (\n    <div className=\"hero\" style={{ marginTop: \"2%\" }}>\n      <Navbar\n        user={user}\n        userDetails={userDetails}\n        handleLogout={handleLogout}\n      />\n      <div className=\"banner-after-nav\">\n        <h1 className=\"banner-title\">Welcome, {userDetails.name}!</h1>\n        <div className=\"quote\" style={{ display: \"inline-flex\" }}>\n          <FormatQuoteIcon />\n          <h4 className=\"banner-quote\">\n            Hunger is not an issue of charity. It's an issue of Justice.\n          </h4>\n          <FormatQuoteIcon />\n        </div>\n      </div>\n      <Orders orders={orders} />\n      <Listings listings={listings} />\n      <Requests requests={requests} handleDeleteRequest={handleDeleteRequest} />\n      <SupportedStores stores={stores} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ShelterHome;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/CreateRequest.js",["387","388","389","390","391"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { getAllStores, handleNewRequest, handleNewRequest2 } from \"../../functions/index\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useHistory } from 'react-router-dom'\n\nconst CreateRequest = (props) => {\nconst history = useHistory();\n\n  const [selectedStore, setSelectedStore] = useState('');\n  const [itemName, setItemName] = useState('');\n  const [itemQuantity, setItemQuantity] = useState('');\n\n  const { handleLogout, userDetails, stores } = props;\n\n  const handleOnchange = (e) => {\n    setSelectedStore(e.target.value);\n  };\n\n\n  const handleSubmit = () => {\n    const request = {\n        'item_name' : itemName,\n        'item_quantity' : itemQuantity, \n        'store_email' : selectedStore,\n        'shelter_email' : userDetails.email,\n        'shelter_name' : userDetails.name,\n        'request_status' : 'Requested', \n        'request_date' : new Date()\n    }\n    \n    stores.map(store => {\n        if (store.email === request.store_email){\n            request['store_name'] = store.name; \n        }\n    })\n\n    console.log('Request: ', request);\n    handleNewRequest2(request);\n    history.push('/');\n  }\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Create a New Request</h1>\n      <div className=\"new-request-form\">\n        <ul className=\"new-request-form-items\">\n          <li>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Item Name\"\n              defaultValue=\"\"\n              style={{ width: \"600px\" }}\n              onChange = {(e) => setItemName(e.target.value)}\n            />\n          </li>\n          <li>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Quantity\"\n              defaultValue=\"\"\n              style={{ width: \"600px\" }}\n              onChange = {(e) => setItemQuantity(e.target.value)}\n            />\n          </li>\n          <li>\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Store\"\n              value={selectedStore}\n              onChange={handleOnchange}\n              helperText=\"Please select the store you want to request from.\"\n              style={{ width: \"600px\" }}\n            >\n              {stores.map((store) => (\n                <MenuItem key={store.email} value={store.email}>\n                  {store.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </li>\n          <li>\n              <button onClick = {() => handleSubmit()} style = {{width : \"600px\", backgroundColor : \"rgb(23, 122, 135)\"}}>Request</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default CreateRequest;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Requests.js",["392","393"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\nimport { Link } from \"react-router-dom\";\n\nexport let displayRequests = () => {}; \n\nconst Requests = (props) => {\n  const { requests, handleDeleteRequest } = props;\n\n  displayRequests = (req, num_items=\"\") => {\n    if (num_items == \"\"){\n      num_items = req.length\n    }\n    console.log('Requests for store:', req);\n    return requests.slice(0, num_items).map((request) => {\n     const requestLink = `/viewrequest/${request.id}`;\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n        <Link className = \"orderLink\" to = {requestLink}>\n            <MediaCard\n                name={request.item_name}\n                store_email={request.store_email}\n                store_name={request.store_name}\n                shelter_name = {request.shelter_name}\n                quantity={request.item_quantity}\n                status={request.request_status}\n                available=\"Not Applicable\"\n                id={request.id}\n                request_date={request.request_date}\n                type=\"request\"\n            />\n        </Link>\n        \n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Received Requests</h2>\n      <div className=\"current_requests\">\n        {requests ? displayRequests(requests, 3) : null}\n        <Grid item xs={3} style={{ display: \"inline-flex\" }}>\n          <Link to=\"/allRequests\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"See All Requests...\" icon=\"view_all\" type = \"requests\"/>\n          </Link>\n        </Grid>\n      </div>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Requests;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Listings.js",["394","395","396"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayListings = (lis, num_items = \"\") => {};\n\nconst Listings = (props) => {\n  const { listings } = props;\n\n  const formatListings = (listings) => {\n    let arr = []; \n    for (const [key, value] of Object.entries(listings)) {\n      arr.push(value)\n    }\n\n    return arr; \n  }\n\n  displayListings = (lis, num_items = \"\") => {\n    lis = formatListings(lis);\n    console.log(\"LISTING: \", lis);\n    if (num_items === \"\") {\n      num_items = lis.length;\n    }\n    return lis.slice(0, num_items).map((listing) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={listing.name}\n            store_email={listing.store_email}\n            available={listing.available}\n            store_name={listing.store_name}\n            quantity={listing.quantity}\n            date_posted={listing.date}\n            id={listing.id}\n            type=\"listing\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Current Listings</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {listings ? displayListings(listings, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/listings\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Listings...\" icon=\"view_all\" type = \"listings\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Listings;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Requests.js",["397"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\nimport { Link } from \"react-router-dom\";\n\nexport let displayRequests = () => {};\n\nconst Requests = (props) => {\n  const { requests, handleDeleteRequest } = props;\n\n  displayRequests = (req, num_items = \"\") => {\n    if (num_items == \"\"){\n      num_items = requests.length\n    }\n    console.log('requests in dispaly: ', req);\n    return requests.slice(0, num_items).map((request) => {\n      \n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={request.item_name}\n            store_email={request.store_email}\n            store_name={request.store_name}\n            quantity={request.item_quantity}\n            request_status={request.request_status}\n            available=\"Not Applicable\"\n            id={request.id}\n            request_date={request.request_date}\n            handleDelete={handleDeleteRequest}\n            type=\"request\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Current Requests</h2>\n      <div className=\"current_requests\">\n        {requests ? displayRequests(requests, 3) : null}\n        <Grid item xs={3} style={{ display: \"inline-flex\" }}>\n        <Link to=\"/allRequests\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"See All Requests...\" icon=\"view_all\" />\n          </Link>\n          <Link to=\"/request\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"Make a New Request...\" icon=\"plus\" />\n          </Link>\n        </Grid>\n      </div>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Requests;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Listings.js",["398"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayListings = () => {};\n\nconst Listings = (props) => {\n  const { listings, handleDelete } = props;\n\n  const formatListings = (listings) => {\n    let arr = []; \n    for (const [key, value] of Object.entries(listings)) {\n      arr.push(value)\n    }\n\n    return arr; \n  }\n\n  console.log(listings);\n\n  displayListings = (listings, num_items = \"\") => {\n    listings = formatListings(listings);\n    if (num_items === \"\") {\n      num_items = listings.length;\n    }\n    return listings.slice(0, num_items).map((listing) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n        \n          <MediaCard\n            name={listing.name}\n            store_email={listing.store_email}\n            available={listing.available}\n            store_name={listing.store_name}\n            quantity={listing.quantity}\n            date_posted={listing.date}\n            id={listing.id}\n            type=\"listing\"\n            role=\"Store\"\n            handleDelete = {handleDelete}\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Your Current Listings</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {listings ? displayListings(listings, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/listings\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Listings...\" icon=\"view_all\" type = \"listings\" />\n              </Link>\n            </Grid>\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/newlisting\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"Create New Listing...\" icon=\"add\" type = \"listings\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Listings;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Orders.js",["399"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\n\n\nexport let displayOrders = () => {};\n\nconst Orders = (props) => {\n  const { orders, userDetails } = props;\n\n  displayOrders = (orders, num_items = \"\") => {\n    if (num_items === \"\") {\n      num_items = orders.length;\n    }\n\n    return orders.slice(0, num_items).map((order) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={order.name}\n            store_email={order.store_email}\n            store_name={order.store_name}\n            quantity={order.quantity}\n            date_posted={order.ordered_date}\n            available=\"Not Applicable\"\n            id={order.id}\n            type=\"order\"\n            order_status={order.order_status}\n            className=\"orders-card\"\n            shelter_name = {order.shelter_name}\n          />\n        </Grid>\n      );\n    });\n  };\n\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Ongoing Orders</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {orders ? displayOrders(orders, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/allOrders\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Orders...\" icon=\"view_all\" type = \"orders\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Orders;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Navbar.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419"],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport { Link } from 'react-router-dom'; \nimport {BrowserRouter as Router, Switch, Route, BrowserRouter} from 'react-router-dom'; \nimport Tax from './Tax';\nimport History from './History'; \nimport ShelterHome from './Shelter/ShelterHome'; \nimport StoreHome from './StoreHome'; \n\nexport default function NavBar(props) {\n\nconst {user, handleLogout, userDetails} = props; \n\n  return (\n            <div className = \"navbar\">\n            <nav>\n                <a><Link to = '/' style = {{ textDecoration : 'none'}}>\n                Home\n            </Link> </a>\n            <a><Link to = '/tax' style = {{ textDecoration : 'none'}}>\n                Financials\n            </Link></a>\n            <a><Link to = '/history' style = {{ textDecoration : 'none'}}>\n                History\n            </Link></a>\n            <a color=\"inherit\" onClick = {handleLogout}>Logout</a>\n            </nav>\n            </div>\n  );\n}","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Orders.js",["420","421"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayOrders = () => {};\n\nconst Orders = (props) => {\n  const { orders } = props;\n\n  displayOrders = (orders, num_items = \"\") => {\n    if (num_items === \"\") {\n      num_items = orders.length;\n    }\n\n    return orders.slice(0, num_items).map((order) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={order.name}\n            store_email={order.store_email}\n            store_name={order.store_name}\n            quantity={order.quantity}\n            date_posted={order.ordered_date}\n            available=\"Not Applicable\"\n            id={order.id}\n            type=\"order\"\n            order_status={order.order_status}\n            className=\"orders-card\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Ongoing Orders</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {orders ? displayOrders(orders, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/allOrders\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Orders...\" icon=\"view_all\" type = \"orders\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Orders;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Table.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/components/Footer.js",["422","423","424","425","426"],"import React from 'react'; \nimport './Footer.css'; \nimport Grid from \"@mui/material/Grid\";\nconst Footer = () => {\n    return (\n        <div class=\"footer-dark\">\n        <footer>\n            <div class=\"container\">\n                <div class=\"row\">\n                <Grid container spacing={2} style={{ marginTop: \"2%\", marginLeft : \"2%\" }}>\n                    <Grid item xs = {3}>\n                    <h3>About</h3>\n                        <ul>\n                            <li><a href=\"#\">Company</a></li>\n                            <li><a href=\"#\">Team</a></li>\n                        </ul>\n                    </Grid>\n                    <Grid item xs = {8}>\n                        <h3>Hunger Warrior</h3>\n                        <p>Hunger Warrior is a web application that will facilitate safe and legal food distribution. Hunger Warrior will overcome the obstacle of navigating food safety laws, by vetting the food before it is delivered. This will take into account food safety laws in tandem with inventory management practices. </p>\n                    </Grid>\n                    </Grid>\n                    <div class=\"col item social\" style = {{marginTop : \"2%\"}}><a href=\"#\"><i class=\"icon ion-social-github\"></i></a><a href=\"#\"><i class=\"icon ion-social-facebook\"></i></a><a href=\"#\"><i class=\"icon ion-social-instagram\"></i></a></div>\n                </div>\n                <p class=\"copyright\">Hunger Warrior © 2021</p>\n            </div>\n\n        </footer>\n    </div>\n    )\n}\n\nexport default Footer;","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/ProgressBar.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Card2.js",["427","428"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\nimport NextPlanIcon from '@mui/icons-material/NextPlan';\nimport AddIcon from '@mui/icons-material/Add';\nexport default function MediaCard2(props) {\n  const { name, icon, type } =\n    props;\n\n\n\n    const calculateHeight = () => {\n      let height;\n      if (type === \"orders\"){\n          height = 210;\n      }\n      else if (type === \"listings\"){\n          height = 204;\n      }\n      else {\n          height = 250;\n      }\n      return height; \n  }\n\n  return (\n    <Card sx={{ minWidth : 100, maxWidth: props.width ? props.width : 345, minHeight : props.height? props.height : calculateHeight()}} style = {{marginRight : '10%'}}id = \"card2\">\n      <CardContent>\n        <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{textAlign: 'center'}}>\n          {name}\n        </Typography>\n        {icon === \"view_all\" ? \n        <div className = \"view_all_icon\">\n        <NextPlanIcon color = 'primary' fontSize = '130%' style = {{marginTop : '20%', marginLeft : '40%', marginRight : '40%', transform: 'scale(2.8)'}}/>\n    </div>: \n    <div className = \"view_all_icon\">\n        <AddIcon color = 'primary' fontSize = '130%' style = {{marginTop : '20%', marginLeft : '40%', marginRight : '40%', transform: 'scale(2.8)'}}/>\n    </div>\n        }\n        \n        </CardContent>\n    </Card>\n  );\n}\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Map.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/SupportedStores.js",["429"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\n\nconst SupportedStores = (props) => {\n  const { stores } = props;\n  const displayStores = () => {\n    return stores.map((store) => {\n      let profileLink = `/profile/${store.email}`\n      return (\n        <Grid item xs={6}>\n          <div className=\"store_information\">\n            <div className=\"store_picture\">\n              <img width=\"100%\" height=\"300\" src={store.image}></img>\n            </div>\n            <h2 className=\"store_title\">{store.name}</h2>\n            <p className=\"store_location\">{store.location}</p>\n            <p className=\"store_phone\">{store.phone}</p>\n            <div className=\"store_information_buttons\">\n              <Link className=\"store_links_1\" to = '/viewStoreListings'>View Listings</Link>\n              <Link className=\"store_links_2\" to = {profileLink}>Store Profile</Link>\n            </div>\n          </div>\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Stores Currently Supported</h2>\n      <Grid container spacing={2}>\n        {displayStores()}\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default SupportedStores;\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Card2.js",[],"/Users/trapbookpro/Development/hunger-warrior/src/components/Store/Card.js",["430","431","432","433"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MediaCard(props) {\n  const { name, store_email, shelter_name, available, handleDelete, store_name, quantity, date_posted, request_status, id, handleRequestDelete, type, request_date, order_status } =\n    props;\n\n    const orderLink = `viewOrder/${id}`; \n\n    if (type === \"order\"){\n\n      return (\n        <Link className = \"orderLink\" to = {orderLink}>\n        <Card sx={{ maxWidth: 345 }} style = {{marginBottom : '10%'}}>\n          <CardMedia height=\"140\" alt=\"green iguana\" />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n              {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n            </Typography>\n            <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              {shelter_name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              Quantity: {quantity}\n            </Typography>\n    \n            \n            {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n                Status : {order_status === \"Order Sent\" ? \"Order Received\" : order_status}\n            </Typography>: null}\n            {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Order Date: {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n              {console.log(date_posted)}\n            </Typography>: null}\n            \n            {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Request Date: {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n              </Typography> : null}\n    \n            {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Status: {request_status}\n            </Typography>: null }\n    \n            {available !== \"Not Applicable\" ? available === true ? (\n              <Typography variant=\"body2\" color=\"green\">\n                Currently Available\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" color=\"red\">\n                Currently Unavailable\n              </Typography>\n            ) : null}\n          </CardContent>\n\n          {/* {available !== \"Not Applicable\" ? <CardActions>\n            {console.log(id)}\n            <Link className = \"order-link\" style = {{textDecoration : \"None\"}} to = {`/order/${id}`}>Order</Link>\n          </CardActions> : <CardActions>\n            {type === \"request\" ?  <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a> : null\n    }\n          </CardActions>} */}\n          \n        </Card>\n        </Link>\n      );\n    }\n\n    else {\n      return ( <Card sx={{ maxWidth: 345 }}>\n        <CardMedia height=\"140\" alt=\"green iguana\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n            {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n          </Typography>\n          <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            {shelter_name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            Quantity: {quantity}\n          </Typography>\n  \n          \n          {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n              Status : {order_status}\n          </Typography>: null}\n          {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Order Date: {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n            {console.log(date_posted)}\n          </Typography>: null}\n          \n          {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Request Date: {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n            </Typography> : null}\n  \n          {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Status: {request_status}\n          </Typography>: null }\n  \n          {available !== \"Not Applicable\" ? available === true ? (\n            <Typography variant=\"body2\" color=\"green\">\n              Currently Available\n            </Typography>\n          ) : (\n            <Typography variant=\"body2\" color=\"red\">\n              Currently Unavailable\n            </Typography>\n          ) : null}\n        </CardContent>\n\n         \n          \n    {type === \"listing\" ? \n        <CardActions> \n            <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a>\n\n        </CardActions> : null}\n        \n      </Card>)\n    }\n\n\n\n}\n","/Users/trapbookpro/Development/hunger-warrior/src/components/Shelter/Card.js",["434","435","436"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MediaCard(props) {\n  const {\n    name,\n    store_email,\n    available,\n    store_name,\n    quantity,\n    date_posted,\n    request_status,\n    id,\n    handleDelete,\n    type,\n    request_date,\n    order_status,\n  } = props;\n\n  const orderLink = `viewOrder/${id}`;\n\n  if (type === \"order\") {\n    return (\n      <Link className=\"orderLink\" to={orderLink}>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardMedia height=\"140\" alt=\"green iguana\" />\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h6\"\n              component=\"div\"\n              style={{ marginBottom: \"8%\" }}\n            >\n              {type === \"order\" ? (\n                <Link className=\"orderLink\" to={orderLink}>\n                  {name}{\" \"}\n                </Link>\n              ) : (\n                name\n              )}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              {store_name}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              Quantity: {quantity}\n            </Typography>\n\n            {type === \"order\" ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"5%\" }}\n              >\n                Status : {order_status}\n              </Typography>\n            ) : null}\n            {type === \"order\" && date_posted ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Order Date:{\" \"}\n                {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n              </Typography>\n            ) : null}\n\n            {type === \"request\" && request_date ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Request Date:{\" \"}\n                {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n              </Typography>\n            ) : null}\n\n            {request_status ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Status: {request_status}\n              </Typography>\n            ) : null}\n\n            {available !== \"Not Applicable\" ? (\n              available === true ? (\n                <Typography variant=\"body2\" color=\"green\">\n                  Currently Available\n                </Typography>\n              ) : (\n                <Typography variant=\"body2\" color=\"red\">\n                  Currently Unavailable\n                </Typography>\n              )\n            ) : null}\n          </CardContent>\n          {available !== \"Not Applicable\" ? (\n            <CardActions>\n              <Link\n                className=\"order-link\"\n                style={{ textDecoration: \"None\" }}\n                to={`/order/${id}`}\n              >\n                Order\n              </Link>\n            </CardActions>\n          ) : (\n            <CardActions>\n              {type === \"request\" ? (\n                <a\n                  className=\"order-link\"\n                  onClick={() => handleDelete(id)}\n                  style={{ textDecoration: \"None\", textAlign: \"Center\" }}\n                >\n                  Delete\n                </a>\n              ) : null}\n            </CardActions>\n          )}\n        </Card>\n      </Link>\n    );\n  } else {\n    return (\n      <Card sx={{ maxWidth: 345 }}>\n        <CardMedia height=\"140\" alt=\"green iguana\" />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            component=\"div\"\n            style={{ marginBottom: \"8%\" }}\n          >\n            {type === \"order\" ? (\n              <Link className=\"orderLink\" to={orderLink}>\n                {name}{\" \"}\n              </Link>\n            ) : (\n              name\n            )}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"text-secondary\"\n            style={{ marginBottom: \"5%\" }}\n          >\n            {store_name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"text-secondary\"\n            style={{ marginBottom: \"5%\" }}\n          >\n            Quantity: {quantity}\n          </Typography>\n\n          {type === \"order\" ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              Status : {order_status}\n            </Typography>\n          ) : null}\n          {type === \"order\" && date_posted ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Order Date:{\" \"}\n              {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n            </Typography>\n          ) : null}\n\n          {type === \"request\" && request_date ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Request Date:{\" \"}\n              {request_date.seconds\n                ? new Date(request_date.seconds * 1000).toString().slice(0, 15)\n                : request_date.slice(0, 10)}\n            </Typography>\n          ) : null}\n\n          {request_status ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Status: {request_status}\n            </Typography>\n          ) : null}\n\n          {available !== \"Not Applicable\" ? (\n            available === true ? (\n              <Typography variant=\"body2\" color=\"green\">\n                Currently Available\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" color=\"red\">\n                Currently Unavailable\n              </Typography>\n            )\n          ) : null}\n        </CardContent>\n        {available !== \"Not Applicable\" ? (\n          <CardActions>\n            <Link\n              className=\"order-link\"\n              style={{ textDecoration: \"None\" }}\n              to={`/order/${id}`}\n            >\n              Order\n            </Link>\n          </CardActions>\n        ) : (\n          <CardActions>\n            {type === \"request\" ? (\n              <a\n                className=\"order-link\"\n                onClick={() => handleDelete(id)}\n                style={{ textDecoration: \"None\", textAlign: \"Center\" }}\n              >\n                Delete\n              </a>\n            ) : null}\n          </CardActions>\n        )}\n      </Card>\n    );\n  }\n}\n","/Users/trapbookpro/Development/hwfront/src/index.js",[],"/Users/trapbookpro/Development/hwfront/src/App.js",["437","438","439","440","441","442","443","444","445","446"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport Login from \"./components/Login\";\nimport {\n  getAllStores,\n  getUserDetails,\n  getAllStores2,\n  getAllShelters,\n} from \"./functions/index\";\nimport ViewOrder from \"./components/Shelter/ViewOrder\";\nimport { ViewOrder as ViewOrderForStore } from \"./components/Store/ViewOrder\";\nimport Profile from \"./components/Store/Profile\";\nimport CreateListing from \"./components/Store/CreateNewListing\";\nimport ShelterFinancials from \"./components/Shelter/Financials\";\nimport StoreFinancials from \"./components/Store/Financials\";\n\n// backend\nimport {\n  handleLogin,\n  handleLogout,\n  authListener,\n  handleSignUp,\n} from \"./functions/index\";\nimport StoreHome from \"./components/Store/StoreHome\";\nimport ShelterHome from \"./components/Shelter/ShelterHome\";\nimport CreateRequest from \"./components/Shelter/CreateRequest\";\nimport CreateNewOrder from \"./components/Shelter/CreateNewOrder\";\nimport Match from \"./components/Shelter/Match\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n  withRouter,\n} from \"react-router-dom\";\nimport AllListings from \"./components/AllListings\";\nimport AllOrders from \"./components/AllOrders\";\nimport ViewRequest from \"./components/Store/ViewRequest\";\nimport AllRequests from \"./components/AllRequests\";\nimport ReactDOM from \"react-dom\";\n\n// function\nconst App = () => {\n  // state variables\n  /*\n  'useState' Usage: \n  const [VARIABLE_NAME, FUNCTION_TO_CHANGE_THE_VARIABLE] = useState(INITIAL_VARIABLE_VALUE)\n  */\n  const [user, setUser] = useState(\"\");\n  const [userDetails, setUserDetails] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n  const [stores, setStores] = useState([{}]);\n  const [shelters, setShelters] = useState([{}]);\n  const [loading, setLoading] = useState(true);\n  const [isUser, setIsUser] = useState(false);\n\n  // clear text inputs\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  // clear errors\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  //useEffect runs as soon as the page loads\n  useEffect(async () => {\n    await authListener(setUser, setLoading, setUserDetails);\n    await getAllStores2(setStores);\n    await getAllShelters(setShelters);\n    // check if a user is already logged in so that we know which page to display\n  }, []);\n\n  useEffect(() => {\n    if (isUser == true) {\n      getUserDetails(email, setUserDetails);\n    }\n  }, [isUser]);\n\n  return (\n    <div className=\"App\">\n      <section className=\"banner\">\n        <h1 className=\"title\">HUNGER WARRIOR</h1>\n      </section>\n\n      {loading ? (\n        <div className=\"loader\"></div>\n      ) : !user ? (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n          setEmailError={setEmailError}\n          setPasswordError={setPasswordError}\n          userDetails={userDetails}\n          setUserDetails={setUserDetails}\n          setIsUser={setIsUser}\n          setUser={setUser}\n        />\n      ) : userDetails.type === \"Shelter\" ? (\n        <Router>\n          <Switch>\n            <Route\n              path=\"/financials\"\n              component={() => (\n                <ShelterFinancials\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/request\"\n              component={() => (\n                <CreateRequest\n                  user={user}\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  stores={stores}\n                />\n              )}\n            />\n            <Route path=\"/listings\" component={withRouter(AllListings)} />\n            <Route\n              path=\"/allOrders\"\n              component={() => (\n                <AllOrders\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Shelter\"\n                />\n              )}\n            />\n            <Route\n              path=\"/vieworder/:id\"\n              component={() => (\n                <ViewOrder\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/match\"\n              component={() => (\n                <Match userDetails={userDetails} stores={stores} />\n              )}\n            />\n\n            <Route\n              path=\"/allRequests\"\n              component={() => (\n                <AllRequests\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Shelter\"\n                />\n              )}\n            />\n            <Route\n              path=\"/profile/:email\"\n              component={() => <Profile userDetails={userDetails} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <ShelterHome\n                  user={user}\n                  handleLogout={handleLogout}\n                  userDetails={userDetails}\n                  stores={stores}\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n      ) : (\n        <Router>\n          <Switch>\n            <Route\n              path=\"/financials\"\n              component={() => (\n                <StoreFinancials\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <StoreHome\n                  user={user}\n                  handleLogout={handleLogout}\n                  userDetails={userDetails}\n                  shelters={shelters}\n                />\n              )}\n            />\n            <Route\n              path=\"/newlisting\"\n              component={() => (\n                <CreateListing\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/vieworder/:id\"\n              component={() => (\n                <ViewOrderForStore\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/viewrequest/:id\"\n              component={() => (\n                <ViewRequest\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/listings\"\n              component={() => (\n                <AllListings\n                  store_email={userDetails.email}\n                  handleLogout={handleLogout}\n                />\n              )}\n            />\n            <Route\n              path=\"/allRequests\"\n              component={() => (\n                <AllRequests\n                  userDetails={userDetails}\n                  handleLogout={handleLogout}\n                  role=\"Store\"\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n      )}\n      {/* Check if a user is logged in. If so, display homepage. Else, display login page*/}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/trapbookpro/Development/hwfront/src/reportWebVitals.js",[],"/Users/trapbookpro/Development/hwfront/src/fire.js",["447"],"/Users/trapbookpro/Development/hwfront/src/components/Login.js",["448"],"import React from 'react'; \nimport {useState} from 'react'; \n\nimport {handleLogin2, handleSignUp} from '../functions/index';\n\nconst Login = (props) => {\n\n    const [name, setName] = useState('');\n    const [location, setLocation] = useState('');\n    const [phone, setPhone] = useState(''); \n    const [image, setImage] = useState(''); \n    const [type, setType] = useState(''); \n\n    const [signUpStatus, setSignUpStatus] = useState(false); \n\n    const {email, setEmail, password, \n    setPassword,\n    hasAccount ,\n    setHasAccount ,\n    emailError,\n    setEmailError,\n    setPasswordError,\n    passwordError,\n    setUserDetails,\n    setIsUser,\n    setUser\n} = props; \n\n    return (\n        <section className = \"login\">\n            <div className = \"loginContainer\">\n                {hasAccount ?\n                <>\n                 <h2 className = \"loginContainerMessage\">Log Into Your Account</h2> \n                 <label>Email</label>\n                <input type = \"text\" autoFocus required value = {email} onChange = {e => setEmail(e.target.value)} />\n                <p className = \"errorMsg\">{emailError}</p>\n                <label>Password</label>\n                <input type = \"password\" required value = {password} onChange = {e => setPassword(e.target.value)} />\n                <p className = \"errorMsg\">{passwordError}</p>\n                 </>\n                 : \n                 <>\n                 <h2 className = \"loginContainerMessage\">Sign Up For an Account</h2> \n                <label>Name</label>\n                <input type = \"text\" autoFocus required value = {name} onChange = {e => setName(e.target.value)} />\n                <label>Location</label>\n                <input type = \"text\" autoFocus required value = {location} onChange = {e => setLocation(e.target.value)} />\n                <label>Phone</label>\n                <input type = \"text\" autoFocus required value = {phone} onChange = {e => setPhone(e.target.value)} />\n                <label>Type</label>\n                    <select name = \"type\" id = \"type\" onChange = {e => setType(e.target.value)} >\n                        <option label = \" \"></option>\n                        <option value = \"Store\">Store</option>\n                        <option value = \"Shelter\">Shelter</option>\n                    </select>\n                <label>Email</label>\n                <input type = \"text\" autoFocus required value = {email} onChange = {e => setEmail(e.target.value)} />\n                <p className = \"errorMsg\">{emailError}</p>\n                <label>Password</label>\n                <input type = \"password\" required value = {password} onChange = {e => setPassword(e.target.value)} />\n                <p className = \"errorMsg\">{passwordError}</p>\n                <label>Image (Link to image)</label>\n                <input type = \"text\" value = {image} onChange = {e => setImage(e.target.value)} />\n                </>\n            }   \n                <div className = \"btnContainer\">\n                    {hasAccount ? (\n                        <>\n                            <button onClick = {() => handleLogin2(email, password, setEmailError, setPasswordError, setIsUser, setUser)}>Sign In</button>\n                            <p>Don't have an account? <span onClick = {() => setHasAccount(!hasAccount)}>Sign Up</span></p>\n                        </>\n\n                    ): (\n                        <>\n                            <button onClick = {() => handleSignUp(name, location, phone, type, email, image, password, setEmailError, setPasswordError, setSignUpStatus)}>Sign up</button>\n                            {signUpStatus ? <h4 style = {{color : 'white', margin: '2% auto', textAlign: 'center'}}>You have signed up successfully. Please login.</h4> : null}\n                            <p>Have an account? <span onClick = {() => setHasAccount(!hasAccount)}>Sign In</span></p>\n                        </>\n                    )}\n                </div>\n                \n            </div>\n        </section>\n    )\n}\n\nexport default Login; ","/Users/trapbookpro/Development/hwfront/src/components/AllListings.js",["449"],"import React, {useState, useEffect} from 'react'; \nimport { displayListings } from './Shelter/Listings'; \nimport {displayListings as displayListingsForStore } from './Store/Listings'; \nimport { getAllListings2 } from \"../functions/index\";\nimport Navbar from \"./Navbar\";\n\n\nconst AllListings = (props) => {\n    const { store_email } = props; \n    \n    const [listings, setListings] = useState([{}]);\n    const [isStore, setIsStore] = useState(false); \n    \n    useEffect(() => {\n        if (store_email){\n            getAllListings2(store_email, setListings); \n            setIsStore(true); \n        }\n        else {\n            getAllListings2(\"\", setListings);\n        }\n      }, []);\n\n    return (\n        <div className = \"hero\">\n            <Navbar />\n            <h1 className=\"section-title\" style = {{marginBottom: '2%'}}>All Listings</h1>\n            {isStore? displayListingsForStore(listings, '') : displayListings(listings, '')}\n        </div>\n    )\n}\n\nexport default AllListings; ","/Users/trapbookpro/Development/hwfront/src/components/AllOrders.js",["450"],"/Users/trapbookpro/Development/hwfront/src/functions/index.js",["451","452","453"],"import fire from \"../fire\";\nimport Geocode from \"react-geocode\";\n\nconst db = fire.firestore();\n\n//1.\nexport const authListener = (setUser, setLoading, setUserDetails) => {\n  fire.auth().onAuthStateChanged((user) => {\n    if (user) {\n      // set the 'user' state variable to the current user\n      setUser(user);\n      getUserDetails(user.email, setUserDetails);\n      setLoading(false);\n    } else {\n      setUser(\"\");\n      setLoading(false);\n    }\n  });\n};\n\nexport const handleLogin2 = async (\n  email,\n  password,\n  setEmailError,\n  setPasswordError,\n  setIsUser,\n  setUser\n) => {\n  await fetch(`https://hungerwarriorapi.herokuapp.com/login/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  })\n    .then((resp) => resp.json())\n    .then((resp) => setUser(resp))\n    .then(setIsUser(true))\n    .then(handleLogin(email, password))\n    .catch((error) => console.log(error));\n};\n\nexport const getUserDetails = (email, setUserDetails) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/users?email=${email}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((resp) => resp.json())\n    .then((resp) => setUserDetails(resp));\n};\n\nexport const getAllListings2 = (email = \"\", setListings) => {\n  if (!email) {\n    fetch(\"https://hungerwarriorapi.herokuapp.com/listings\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((resp) => setListings(resp));\n  } else {\n    fetch(`https://hungerwarriorapi.herokuapp.com/listings?email=${email}`, {\n      method : \"GET\",\n      headers : {\n        \"Content-Type\" : \"application/json\",\n      },\n    })\n    .then((resp) => resp.json())\n    .then((resp) => setListings(resp))\n  }\n};\n\nexport const getOrders2 = async (email, setOrders) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/orders?email=${email}`, {\n    method : \"GET\",\n    headers: {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then((resp) => setOrders(resp))\n};\n\nexport const getAllStores2 = async (setStores) => {\n  fetch('https://hungerwarriorapi.herokuapp.com/users?role=Store', {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then(resp => setStores(resp)); \n}\n\nexport const getAllShelters = async (setShelters) => {\n  fetch('https://hungerwarriorapi.herokuapp.com/users?role=Shelter', {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then(resp => setShelters(resp));\n}\n\nexport const getTotalValue = async (email, setTotalValue) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/totalValue?email=${email}`,{\n    method : \"GET\", \n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n  }).then((resp) => resp.json()).then(resp => setTotalValue(resp)); \n}\n\nexport const getRequests2 = async (email, setRequests) => {\n  // access the `requests` table in our database\n  fetch(`https://hungerwarriorapi.herokuapp.com/requests?email=${email}`, {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then(resp => setRequests(resp))\n}\n\nexport const handleNewRequest2 = async (request_details) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/requests/`, {\n    method : \"POST\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify(request_details)\n  }).then((resp) => resp.json())\n}\n\nexport const getListingById2 = async (id, setListing) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/listings?id=${id}`, {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n  }).then((resp) => resp.json()).then(resp => setListing(resp))\n}\n\nexport const getRequestById2 = async (id, setRequest) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/requests?id=${id}`, {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then(resp => setRequest(resp))\n}\n\nexport const getOrder2 = async (id, setOrder) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/orders?id=${id}`, {\n    method :  \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json()).then(resp => setOrder(resp))\n}\n\n\nexport const handleNewListing2 = async(listing_details) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/listings/`, {\n    method : 'POST',\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify(listing_details)\n  }).then((resp) => resp.json())\n}\n\nexport const handleNewOrder2 = async(order_details) => {\n  \n  fetch(`https://hungerwarriorapi.herokuapp.com/orders/`, {\n    method : \"POST\",\n    headers : {\n      \"Content-Type\" : \"application/json\" \n    },\n    body : JSON.stringify(order_details)\n  }).then((resp) => resp.json())\n}\n\nexport const handleStatusChange2 = async (id, newStatus) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/orders/?id=${id}`, {\n    method : \"PUT\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify(newStatus)\n  }).then((resp) => resp.json())\n}\n\nexport const handleDelivererStatusChange = async (id, name, phone) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/orders/?id=${id}&deliverer=True/`, {\n    method : \"PUT\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify({\n      name : name,\n      phone : phone\n    })\n  }).then((resp) => resp.json()); \n}\n\nexport const deleteRequest2 = async (id) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/requests/?delete=${id}`, {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json())\n}\n\nexport const deleteListing2 = async (id) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/listings/?delete=${id}`, {\n    method : \"GET\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    }\n  }).then((resp) => resp.json())\n}\n\nexport const handleRequestStatusChange2 = async (id, newStatus) => {\n  fetch(`https://hungerwarriorapi.herokuapp.com/requests/?id=${id}`, {\n    method : \"PUT\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify(newStatus)\n  }).then((resp) => resp.json())\n}\n \n\nexport const handleLogin = (email, password) => {\n  //clearErrors();\n  //authenticate with firebase\n\n  fire\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((err) => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          // in case we get these errors, set the emailError variable to the error message\n          break;\n        case \"auth/wrong-password\":\n          // same as above\n          break;\n      }\n      // If success, call the `getUserDetails` function to get the user's details.\n    })\n    .then(console.log(\"true\"));\n};\n\nlet token, userId;\n\nexport const handleSignUp = async (\n  name,\n  location,\n  phone,\n  type,\n  email,\n  image,\n  password,\n  setEmailError,\n  setPasswordError,\n  setSignUpStatus\n) => {\n  // authenticate with fireabase\n\n  let userCredentials; \n\n  let latlng = {}\n\n  await Geocode.fromAddress(location).then((response) => {\n    \n    const {lat, lng} = response.results[0].geometry.location;  \n    \n    latlng = {\n      latitude : lat,\n      longitude : lng\n    }\n  })  \n\n  userCredentials = {\n    name: name,\n    location: location,\n    phone: phone,\n    type: type,\n    email: email,\n    userId: userId,\n    image: image,\n    latitude : latlng.latitude, \n    longitude : latlng.longitude\n  }\n\n  await fetch(`https://hungerwarriorapi.herokuapp.com/signup/`, {\n    method : \"POST\",\n    headers : {\n      \"Content-Type\" : \"application/json\"\n    },\n    body : JSON.stringify({\n      'email' : email,\n      'password' : password\n    })\n  })\n  .then(\n    fetch('https://hungerwarriorapi.herokuapp.com/users/',{\n      method : 'POST',\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(userCredentials)\n    })).then(setSignUpStatus(true))\n  };\n\n/*\n    Function to handle user logout. \n    Parameters : None \n    -- Uses firebase's signOut() function. \n  */\nexport const handleLogout = () => {\n  fire.auth().signOut();\n};\n\n/*\n    Function to check if a user is already logged in. \n    Parameters : \n    1. setUser : State function to change/edit the 'user' state variable. \n    2. setLoading : State function to change/edit the 'loading' state variable. Used to display the loading icon. \n    3. setUserDetails : State function to change/edit the 'userDetails' state variable. \n  */\n","/Users/trapbookpro/Development/hwfront/src/components/AllRequests.js",["454","455"],"/Users/trapbookpro/Development/hwfront/src/components/Shelter/ViewOrder.js",["456","457","458","459"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport StepProgressBar from \"./ProgressBar\";\nimport { getOrder2, getUserDetails } from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\nimport {Grid} from '@material-ui/core';\n\nconst ViewOrder = (props) => {\n  const { userDetails, handleLogout } = props;\n  const [order, setOrder] = useState({});\n  const [store, setStore] = useState({});\n  const { id } = useParams();\n  let progress;\n\n  useEffect(async () => {\n    await getOrder2(id, setOrder);\n  }, []);\n\n\n  useEffect(async () => {\n    if (order){\n      await getUserDetails(order.store_email, setStore);\n\n    }\n  }, [order]);\n\n\n  const calculateProgress = () => {\n    if (order) {\n      if (order.order_status === \"Order Sent\") {\n        progress = 25;\n      } else if (order.order_status === \"Shipped\") {\n        progress = 75;\n      } else if (order.order_status === \"Delivered\") {\n        progress = 100;\n      } else {\n        progress = 0;\n      }\n    }\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      \n      <h1 className=\"section-title\">Order Details</h1>\n      <div className=\"map-view-order\">\n        {store.location && order ? (\n\n          <MapContainer\n            latlng1 = {{'latitude' : userDetails.latitude, 'longitude' : userDetails.longitude}}\n            latlng2 = {{'latitude' : store.latitude, 'longitude' : store.longitude}}\n            storeName={store.name}\n            shelterName={userDetails.name}\n            onClick={() => {\n            }}\n          />\n        ) : (\n         null\n        )}\n      </div>\n\n      <div className=\"progress-bar\">\n        {calculateProgress()}\n\n        <StepProgressBar progress={progress} />\n\n        <div\n          className=\"progressbar-labels\"\n          style={{ display: \"inline-flex\", marginTop: \"4%\" }}\n        >\n          <p className=\"progressbar-label progressbar-label1\">Ordered</p>\n          <p className=\"progressbar-label progressbar-label2\">Shipped</p>\n          <p className=\"progressbar-label progressbar-label3\">Delivered</p>\n        </div>\n      </div>\n      \n        <Grid container spacing = {2}>\n          <Grid item xs = {8}>\n            <div\n              className=\"order-details\"\n              style={{\n                margin: \"3% auto\",\n                width: \"100%\",\n                background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n                  store ? store.image : null\n                })`,\n              }}\n            >\n              <h2 className=\"order-listing-title\">{order.name}</h2>\n              <h3 className=\"order-listing-title2\">\n                {store ? store.name : \"Loading...\"}\n              </h3>\n              <h4 className=\"order-listing-details\">\n                Store Email : {store ? store.email : \"Loading...\"}\n              </h4>\n              <h4 className=\"order-listing-details\">\n                Store Phone : {store ? store.phone : \"Loading...\"}\n              </h4>\n              <h4 className=\"order-listing-details\">\n                Store Location : {store ? store.location : \"Loading...\"}\n              </h4>\n              <h5 className=\"order-listing-details\">Quantity : {order.quantity}</h5>\n            </div>\n          </Grid>\n          <Grid item xs = {4}>\n            <div className = \"store_information\" style = {{margin : '6% auto'}}>\n              <div className = \"icon-pic\"><img src = \"https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png\" height = '230px' /></div>\n              <h2 className = \"\">Delivery By:</h2>\n              <h4 className = \"\">{order.deliverer_name ? order.deliverer_name : 'TBD'}</h4>\n              <h4 className = \"\">Contact : {order.deliverer_name ? order.deliverer_phone : 'TBD'}</h4>\n            </div>\n          </Grid>\n        </Grid>\n      \n    </div>\n  );\n};\n\nexport default ViewOrder;\n","/Users/trapbookpro/Development/hwfront/src/components/Store/CreateNewListing.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Store/ViewRequest.js",["460"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  getRequestById2,\n  handleNewOrder2,\n  handleRequestStatusChange2,\n} from \"../../functions/index\";\nimport Navbar from \"../Navbar\";\n\n\nconst ViewRequest = (props) => {\n  const { id } = useParams();\n  const { handleLogout, userDetails } = props;\n  const [request, setRequest] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    getRequestById2(id, setRequest);\n  }, []);\n\n  const handleConfirm = async () => {\n    const newOrder = {\n      date: new Date(),\n      name: request.item_name,\n      order_status: \"Order Sent\",\n      ordered_by: request.shelter_email,\n      item_value : parseFloat(request.item_value), \n      ordered_date: new Date(),\n      quantity: request.item_quantity,\n      shelter_name: request.shelter_name,\n      store_email: userDetails.email,\n      store_name: userDetails.name,\n    };\n\n    await handleNewOrder2(newOrder);\n    await handleRequestStatusChange2(id, \"Request Accepted\");\n  \n\n    history.push(\"/\");\n  };\n\n  const handleDecline = async () => {\n    await handleRequestStatusChange2(id, \"Request Declined\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Request Details</h1>\n      <div\n        className=\"order-details\"\n        style={{\n          margin: \"3% auto\",\n          width: \"60%\",\n          background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url()`,\n        }}\n      >\n        <h2 className=\"order-listing-title\">{request.item_name}</h2>\n        <h3 className=\"order-listing-title2\">\n          {request ? request.shelter_name : \"Loading...\"}\n        </h3>\n        <h4 className=\"order-listing-details\">\n          Shelter Email : {request ? request.shelter_email : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Request Date :{\" \"}\n          {request && request.request_date\n            ? request.request_date.slice(0,10)\n            : \"Loading...\"}\n        </h4>\n        <h4 className=\"order-listing-details\">\n          Request Status : {request.request_status}\n        </h4>\n        <h5 className=\"order-listing-details\">\n          Quantity : {request.item_quantity}\n        </h5>\n        \n      </div>\n      {request.request_status !== \"Request Accepted\" ? \n     \n          <>\n        \n        {/* <div className = \"\" style = {{margin : '0 auto'}}>\n        <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Value in Dollars\"\n              defaultValue=\"\"\n              style={{ width: \"60%\", margin : '0 20%'}}\n              onChange={(e) => setItemValue(e.target.value)}\n            />\n          <p style = {{textAlign: 'center', margin : '2% auto'}}>*You need to mention the dollar value of the item before accepting just in order for it to register it for your Financial History. The item is still considered donated for free.</p>\n          </div> */}\n          <div\n        className=\"store_information_buttons\"\n        style={{ width: \"40%\", margin: \"0 30%\" }}\n      >\n        <button\n        className=\"store_information_btn\"\n        onClick={() => {\n          handleConfirm();\n        }}\n      >\n        Accept Request\n      </button>\n      <button\n        className=\"store_information_btn\"\n        onClick={() => {\n          handleDecline();\n        }}\n      >\n        Decline Request\n      </button>\n      </div>\n      </>\n\n      : null}\n        \n    </div>\n  );\n};\n\nexport default ViewRequest;\n","/Users/trapbookpro/Development/hwfront/src/components/Store/Profile.js",["461","462","463","464","465","466","467","468","469"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { getOrder2, getOrders2, getUserDetails } from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\nimport Grid from \"@mui/material/Grid\";\nimport {getAllListings2} from '../../functions/index'; \nimport BasicTable from '../Table';\nimport MediaCard2 from \"../Shelter/Card2\";\nimport {Link} from 'react-router-dom';\n\nconst Profile = (props) => {\n    const { email } = useParams();\n    const { userDetails } = props; \n    const [storeDetails, setStoreDetails] = useState({})\n    const [listings, setListings] = useState({})\n    const [orders, setOrders] = useState({}) \n\n\n\n    const formatListings = (listings) => {\n        let arr = []; \n        for (const [key, value] of Object.entries(listings)) {\n          arr.push(value)\n        }\n    \n        return arr; \n      }\n\n\n    const filterOrders = (orders) => {\n        let orders_with_store = []; \n\n        orders.map(order => {\n            if (order.store_email == storeDetails.email){\n                orders_with_store.push(order)\n            }\n        })\n\n        return orders_with_store; \n    }\n\n    useEffect(async () => {\n        await getUserDetails(email, setStoreDetails);\n    }, [])\n\n    useEffect(async () => {\n        \n        if (storeDetails){\n            await getAllListings2(storeDetails.email, setListings)\n        }\n        if (storeDetails){\n            await getOrders2(userDetails.email, setOrders)\n        }\n    }, [storeDetails])\n    \n    return (\n        <div className = \"hero\">\n            <Navbar />\n            {storeDetails && storeDetails.location ? \n            <div>\n            <h1 className = \"section-title\" style = {{marginBottom : '2%'}}>{storeDetails.name}</h1>\n            <Grid container spacing = {8}>\n                <Grid item xs = {9}>\n                    <div>\n                        <img width = '100%' height = \"500\" src = {storeDetails.image} />\n                    </div>\n                </Grid>\n\n                <Grid item xs = {3}>\n                <div className = \"profile-map\" style = {{}}>\n                        <MapContainer\n                            address={storeDetails.location}\n                            storeName={storeDetails.name}\n                            width='100%'\n                        />\n                </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing = {8} style = {{marginBottom: '2.5%'}}>\n                  <Grid item xs = {9}>\n                    <h2 className = \"section-title\" style = {{marginBottom : '2%'}} id = \"listings-from-store\">Available Listings From {storeDetails.name}</h2>\n                    {listings && Object.keys(listings).length > 0 ? <BasicTable columns = {['Quantity', 'View Details']} rows = {formatListings(listings)} usedIn = \"Listings\"/> : 'No Listings Available'}\n                  </Grid>\n                  <Grid item xs = {3}>\n                      <div className = \"store_information\" style = {{height : '100%'}}>\n                          <h2 className = \"section-title\" style = {{marginBottom: '20px'}}>Store Details</h2>\n                          <p style = {{marginBottom : '10px'}}>Email: <span style = {{fontWeight : 'bold'}}>{storeDetails.email}</span></p>\n                          <p style = {{marginBottom : '10px'}}>Phone: {storeDetails.phone}</p>\n                          <p style = {{marginBottom : '10px'}}>Address: {storeDetails.location}</p>\n                      </div>\n                  </Grid>\n              </Grid>\n\n              <Grid container spacing = {8} style ={{marginBottom : '4%'}}>\n                  <Grid item xs = {9}>\n                      <h2 className = \"section-title\" style = {{marginBottom: '2%'}}>Order History</h2>\n                        {orders && orders.length > 0 ? <BasicTable columns = {['Quantity', 'Order Date', 'Status', 'View Details']} rows = {filterOrders(orders)} usedIn = \"Orders\"/> : \"No order history.\"}\n                  </Grid>\n                  <Grid item xs = {3}>\n                  <Link to=\"/request\" style={{ textDecoration: \"None\", textAlign: 'center'}} >\n                        <MediaCard2 width = '100%' name={`Send a Request for an Item`} icon=\"plus\" />\n                  </Link>\n                  </Grid>\n              </Grid>\n\n         </div>\n        : null}\n        </div>\n    )\n}\n\nexport default Profile; ","/Users/trapbookpro/Development/hwfront/src/components/Store/StoreHome.js",["470","471"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport {\n  deleteListing2,\n  getAllListings2,\n  getRequests2,\n  getOrders2,\n} from \"../../functions/index\";\nimport Footer from \"../Footer\";\nimport FormatQuoteIcon from '@mui/icons-material/FormatQuote';\nimport Orders from './Orders'; \nimport Listings from \"./Listings\";\nimport Requests from \"./Requests\";\nimport SheltersMap from './SheltersMap';\n\nexport let displayListings = () => {};\n\nconst ShelterHome = (props) => {\n  const { user, handleLogout, userDetails, shelters } = props;\n  const [orders, setOrders] = useState([{}]);\n  const [listings, setListings] = useState([{}]);\n  const [requests, setRequests] = useState([]);\n\n  useEffect(async () => {\n    await getAllListings2(userDetails.email, setListings);\n    await getRequests2(userDetails.email, setRequests);\n    await getOrders2(userDetails.email, setOrders, 'Store');\n  }, []);\n\n\n  const handleListingDelete = async (id) => {\n    if (window.confirm('Are you sure you want to delete this listing?')){\n        deleteListing2(id); \n        await getAllListings2(userDetails.email, setListings); \n    }\n  }\n\n  return (\n    <div className=\"hero\" style={{ marginTop: \"2%\" }}>\n      <Navbar\n        user={user}\n        userDetails={userDetails}\n        handleLogout={handleLogout}\n      />\n     <div className = \"banner-after-nav\">\n          <h1 className = \"banner-title\">Welcome, {userDetails.name}!</h1>\n          <div className = \"quote\" style = {{display : 'inline-flex'}}>\n            <FormatQuoteIcon />\n            <h4 className = \"banner-quote\">Hunger is not an issue of charity. It's an issue of Justice.</h4>\n            <FormatQuoteIcon />\n            </div>\n      </div>\n      <Orders orders = {orders}/>\n      <Listings listings = {listings} handleDelete = {handleListingDelete}/>\n      <Requests requests = {requests} />\n      <SheltersMap userDetails = {userDetails} shelters = {shelters} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ShelterHome;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/ShelterHome.js",["472","473","474"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport {\n  deleteRequest2,\n  getAllListings2,\n  getOrders2,\n  getRequests2\n} from \"../../functions/index\";\nimport Footer from \"../Footer\";\nimport SupportedStores from \"./SupportedStores\";\nimport Listings from \"./Listings\";\nimport Requests from \"./Requests\";\nimport Orders from \"./Orders\";\nimport FormatQuoteIcon from \"@mui/icons-material/FormatQuote\";\nimport { Link } from 'react-router-dom'; \n\n\nexport let displayListings = () => {};\n\nconst ShelterHome = (props) => {\n  const { user, handleLogout, userDetails, stores } = props;\n  const [orders, setOrders] = useState([{}]);\n  const [listings, setListings] = useState([{}]);\n  const [requests, setRequests] = useState([]);\n\n  useEffect(async () => {\n    await getAllListings2(\"\", setListings);\n    await getRequests2(userDetails.email, setRequests);\n    await getOrders2(userDetails.email, setOrders);\n  }, []);\n\n  const handleDeleteRequest = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this request?\")) {\n      deleteRequest2(id);\n      await getRequests2(userDetails.email, setRequests);\n    }\n  };\n\n  return (\n    <div className=\"hero\" style={{ marginTop: \"2%\" }}>\n      <Navbar\n        user={user}\n        userDetails={userDetails}\n        handleLogout={handleLogout}\n      />\n      <div className=\"banner-after-nav\">\n        <h1 className=\"banner-title\">Welcome, {userDetails.name}!</h1>\n        <div className=\"quote\" style={{ display: \"inline-flex\" }}>\n          <FormatQuoteIcon />\n          <h4 className=\"banner-quote\">\n            Hunger is not an issue of charity. It's an issue of Justice.\n          </h4>\n          <FormatQuoteIcon />\n        </div>\n      </div>\n      <Orders orders={orders} />\n      <Listings listings={listings} />\n      <Requests requests={requests} handleDeleteRequest={handleDeleteRequest} />\n      <div className = \"match\">\n        <p className = \"match-description\">Our match algorithm matches you with stores that are the closest and can deliver the fastest to you.</p>\n  \n          <a className = \"match-link\" style = {{color: 'white'}}><Link to = '/match' style = {{ color : 'white', textDecoration : 'none'}} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Match With a Store\n                </Link></a>\n  \n     \n        </div>\n      <SupportedStores stores={stores} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ShelterHome;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/CreateRequest.js",["475"],"import React, { useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport {\n  handleNewRequest2,\n} from \"../../functions/index\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateRequest = (props) => {\n  const history = useHistory();\n\n  const [selectedStore, setSelectedStore] = useState(\"\");\n  const [itemName, setItemName] = useState(\"\");\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n  const [itemValue, setItemValue] = useState(\"\");\n\n  const { handleLogout, userDetails, stores } = props;\n\n  const handleOnchange = (e) => {\n    setSelectedStore(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    const request = {\n      item_name: itemName,\n      item_quantity: itemQuantity,\n      store_email: selectedStore,\n      shelter_email: userDetails.email,\n      shelter_name: userDetails.name,\n      item_value: parseFloat(itemValue),\n      request_status: \"Requested\",\n      request_date: new Date(),\n    };\n\n    stores.map((store) => {\n      if (store.email === request.store_email) {\n        request[\"store_name\"] = store.name;\n      }\n    });\n\n    handleNewRequest2(request);\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Create a New Request</h1>\n      <div className=\"new-request-form\">\n        <ul className=\"new-request-form-items\">\n          <li>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Item Name\"\n              defaultValue=\"\"\n              style={{ width: \"600px\" }}\n              onChange={(e) => setItemName(e.target.value)}\n            />\n          </li>\n          <li>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Quantity\"\n              defaultValue=\"\"\n              style={{ width: \"600px\" }}\n              onChange={(e) => setItemQuantity(e.target.value)}\n            />\n          </li>\n          <li>\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Store\"\n              value={selectedStore}\n              onChange={handleOnchange}\n              helperText=\"Please select the store you want to request from.\"\n              style={{ width: \"600px\" }}\n            >\n              {stores.map((store) => (\n                <MenuItem key={store.email} value={store.email}>\n                  {store.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </li>\n          <li>\n            <TextField\n              required\n              id=\"outlined-required\"\n              label=\"Value in Dollars\"\n              defaultValue=\"\"\n              style={{ width: \"600px\" }}\n              onChange={(e) => setItemValue(e.target.value)}\n            />\n            <p style={{ textAlign: \"center\", margin: \"2% auto\" }}>\n              *You need to mention the dollar value of the item before accepting\n              just in order for it to register it for your Financial History.\n              The item is still considered donated for free.\n            </p>\n          </li>\n          <li>\n            <button\n              onClick={() => handleSubmit()}\n              style={{ width: \"600px\", backgroundColor: \"rgb(23, 122, 135)\" }}\n            >\n              Request\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default CreateRequest;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/CreateNewOrder.js",["476","477","478"],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Navbar from \"../Navbar\";\nimport {\n  getListingById2,\n  getUserDetails,\n  handleNewOrder2,\n} from \"../../functions/index\";\nimport MapContainer from \"../Map\";\n\nconst CreateNewOrder = (props) => {\n  const history = useHistory();\n\n  const { handleLogout, userDetails } = props;\n  const { id } = useParams();\n  const [listing, setListing] = useState({});\n  const [store, setStore] = useState({});\n\n  useEffect(async () => {\n    await getListingById2(id, setListing);\n  }, []);\n\n  useEffect(async () => {\n    if (listing) {\n      await getUserDetails(listing.store_email, setStore);\n    }\n  }, [listing]);\n\n  const handleSubmit = () => {\n    const order_details = {\n      listing_id: id,\n      ordered_by: userDetails.email,\n      shelter_name: userDetails.name,\n      ordered_date: new Date(),\n      order_status: \"Order Sent\",\n      deliverer_name: \"\",\n      deliverer_phone: \"\",\n      ...listing,\n    };\n\n    handleNewOrder2(order_details);\n    history.push(\"/\");\n  };\n\n  // AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Your order</h1>\n      <div\n        className=\"order-container\"\n        style={{ display: \"block\", width: \"100%\", margin: \"2% auto\" }}\n      >\n        <div className=\"map\" style={{ margin: \"0 auto\" }}>\n          {store && store.latitude && store.longitude ? (\n            <MapContainer\n              latlng1={{ latitude: store.latitude, longitude: store.longitude }}\n              storeName={store.name}\n            />\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n        <div\n          className=\"order-details\"\n          style={{\n            margin: \"3% auto\",\n            width: \"100%\",\n            background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n              store ? store.image : null\n            })`,\n          }}\n        >\n          <h2 className=\"order-listing-title\">{listing.name}</h2>\n          <h3 className=\"order-listing-title2\">{listing.store_name}</h3>\n          <h4 className=\"order-listing-details\">\n            Store Email : {listing.store_email}\n          </h4>\n          <h4 className=\"order-listing-details\">\n            Store Phone : {store ? store.phone : \"Loading...\"}\n          </h4>\n          <h4 className=\"order-listing-details\">\n            Store Location : {store ? store.location : \"Loading...\"}\n          </h4>\n\n          <h5 className=\"order-listing-details\">\n            Quantity : {listing.quantity}\n          </h5>\n        </div>\n      </div>\n\n      <div className=\"store_information_buttons\">\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          Confirm Order\n        </button>\n        <button\n          className=\"store_information_btn\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateNewOrder;\n","/Users/trapbookpro/Development/hwfront/src/components/Store/ViewOrder.js",["479","480","481","482","483"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../Navbar\";\nimport StepProgressBar from \"../Shelter/ProgressBar\";\nimport {\n  getOrder2,\n  getUserDetails,\n  handleStatusChange,\n  handleStatusChange2,\n  handleDelivererStatusChange\n} from \"../../functions/index\";\nimport { useParams } from \"react-router-dom\";\nimport MapContainer from \"../Map\";\nimport {Grid} from '@material-ui/core'; \nimport TextField from \"@mui/material/TextField\";\n\n\nexport const ViewOrder = (props) => {\n  const { userDetails, handleLogout } = props;\n  const [order, setOrder] = useState({});\n  const [shelter, setShelter] = useState({});\n  const [request_status, setRequest_status] = useState(\"\");\n  const [delivererName, setDelivererName] = useState(\"\");\n  const [delivererPhone, setDelivererPhone] = useState(\"\");\n\n  const { id } = useParams();\n\n  let progress;\n\n  const nextRequestStatus = (current_request_status) => {\n    if (current_request_status === \"Order Sent\") {\n      setRequest_status(\"Shipped\");\n    } else if (current_request_status === \"Shipped\") {\n      setRequest_status(\"Delivered\");\n    }\n  };\n\n  const handleOnClick = async () => {\n    await handleStatusChange2(id, request_status);\n    await getOrder2(id, setOrder);\n  };\n\n  const handleSubmit = async () => {\n      await handleDelivererStatusChange(id, delivererName, delivererPhone); \n      await getOrder2(id, setOrder); \n  }\n\n  useEffect(async () => {\n    await getOrder2(id, setOrder);\n  }, [request_status]);\n\n  useEffect(async () => {\n    await getUserDetails(order.ordered_by, setShelter);\n    nextRequestStatus(order.order_status);\n  }, [order]);\n\n  const calculateProgress = () => {\n    if (order) {\n      if (order.order_status === \"Order Sent\") {\n        progress = 25;\n      } else if (order.order_status  === \"Shipped\") {\n        progress = 75;\n      } else if (order.order_status === \"Delivered\") {\n        progress = 100;\n      } else {\n        progress = 0;\n      }\n    }\n  };\n\n  return (\n    <div className=\"hero\">\n      <Navbar handleLogout={handleLogout} />\n      <h1 className=\"section-title\">Order Details</h1>\n      <div className=\"map-view-order\">\n        {shelter.location && order ? (\n          <MapContainer\n            latlng1 = {{'latitude' : userDetails.latitude, 'longitude' : userDetails.longitude}}\n            latlng2 = {{'latitude' : shelter.latitude, 'longitude' : shelter.longitude}}\n            storeName={order.store_name}\n            shelterName={shelter.name}\n            onClick={() => {\n            }}\n          />\n        ) : (\n          <h2>Loading Maps...</h2>\n        )}\n      </div>\n\n      <div className=\"progress-bar\">\n        {calculateProgress()}\n\n        <StepProgressBar progress={progress} />\n\n        <div\n          className=\"progressbar-labels\"\n          style={{ display: \"inline-flex\", marginTop: \"4%\" }}\n        >\n          <p className=\"progressbar-label progressbar-label1\">Ordered</p>\n          <p className=\"progressbar-label progressbar-label2\">Shipped</p>\n          <p className=\"progressbar-label progressbar-label3\">Delivered</p>\n        </div>\n\n        <div className=\"buttons\" style={{ marginTop: \"5%\" }}>\n          {order.order_status !== \"Delivered\" ? (\n            <button\n              onClick={() => {\n                handleOnClick();\n              }}\n              className=\"mark-as-button\"\n            >\n              Mark as {request_status}\n            </button>\n          ) : null}\n        </div>\n      </div>\n\n      <Grid container spacing = {6}>\n        <Grid item xs = {7}>\n          <div\n            className=\"order-details\"\n            style={{\n              margin: \"3% auto\",\n              width: \"100%\",\n              background: `linear-gradient( rgba(0, 0, 0, 0.78), rgba(0, 0, 0, 0.78) ),url(${\n                shelter ? (shelter.image ? shelter.image : null) : null\n              })`,\n            }}\n          >\n            <h2 className=\"order-listing-title\">{order.name}</h2>\n            <h3 className=\"order-listing-title2\">\n              {shelter ? shelter.name : \"Loading...\"}\n            </h3>\n            <h4 className=\"order-listing-details\">\n              Shelter Email : {shelter ? shelter.email : \"Loading...\"}\n            </h4>\n            <h4 className=\"order-listing-details\">\n              Shelter Phone : {shelter ? shelter.phone : \"Loading...\"}\n            </h4>\n            <h4 className=\"order-listing-details\">\n              Shelter Location : {shelter ? shelter.location : \"Loading...\"}\n            </h4>\n            <h5 className=\"order-listing-details\">Quantity : {order.quantity}</h5>\n          </div>\n        </Grid>\n        <Grid item xs = {5}>\n\n\n          <div className = \"store_information\" style = {{margin : '3% auto'}}>\n\n            {order.deliverer_name && order.deliverer_phone ?\n            <> \n            <div className = \"icon-pic\"><img src = \"https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png\" height = '220px' /></div>\n            <h2 className = \"\">Delivery By:</h2>\n            <h4 className = \"\">{order.deliverer_name ? order.deliverer_name : 'TBD'}</h4>\n            <h4 className = \"\">Contact : {order.deliverer_name ? order.deliverer_phone : 'TBD'}</h4>\n            </>\n           : \n           \n           <ul className=\"new-request-form-items\">\n              <li>\n                <TextField\n                  required\n                  id=\"outlined-required\"\n                  label=\"Deliverer Name\"\n                  defaultValue=\"\"\n                  style={{ width: \"600px\", marginBottom : '2%' }}\n                  onChange = {(e) => setDelivererName(e.target.value)}\n                />\n              </li>\n              <li>\n                <TextField\n                  required\n                  id=\"outlined-required\"\n                  label=\"Deliverer Phone\"\n                  defaultValue=\"\"\n                  style={{ width: \"600px\", marginBottom: '2%'}}\n                  onChange = {(e) => setDelivererPhone(e.target.value)}\n                />\n              </li>\n              <li>\n              <button onClick = {() => handleSubmit()} style = {{width : \"600px\", backgroundColor : \"rgb(23, 122, 135)\", marginBottom:\"2%\"}}>Assign Deliverer</button>\n            </li>\n            </ul>\n\n           }\n\n              \n            </div>\n        </Grid>\n        \n      </Grid>\n\n      \n    </div>\n  );\n};\n","/Users/trapbookpro/Development/hwfront/src/components/Navbar.js",["484","485","486"],"import * as React from 'react';\nimport { Link } from 'react-router-dom'; \n\nexport default function NavBar(props) {\n\nconst {user, handleLogout, userDetails} = props; \n\n  return (\n            <div className = \"navbar\">\n            <nav>\n                <Link to = '/' style = {{ textDecoration : 'none'}}>\n                Home\n            </Link> \n           \n            <Link to = '/financials' style = {{ textDecoration : 'none'}}>\n                Financials\n            </Link>\n            <a color=\"inherit\" onClick = {handleLogout}>Logout</a>\n            </nav>\n            </div>\n  );\n}","/Users/trapbookpro/Development/hwfront/src/components/Store/Orders.js",["487"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayOrders = () => {};\n\nconst Orders = (props) => {\n  const { orders, userDetails } = props;\n\n  const sortOrders = (orders) => {\n    orders.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date)\n    })\n    return orders;\n  }\n\n  displayOrders = (orders, num_items = \"\") => {\n    orders = sortOrders(orders); \n    if (num_items === \"\") {\n      num_items = orders.length;\n    }\n\n    return orders.slice(0, num_items).map((order) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n          key = {orders.id}\n        >\n          <MediaCard\n            name={order.name}\n            store_email={order.store_email}\n            store_name={order.store_name}\n            quantity={order.quantity}\n            date_posted={order.date}\n            available=\"Not Applicable\"\n            id={order.id}\n            type=\"order\"\n            order_status={order.order_status}\n            className=\"orders-card\"\n            shelter_name = {order.shelter_name}\n          />\n        </Grid>\n      );\n    });\n  };\n\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Ongoing Orders</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {orders ? displayOrders(orders, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/allOrders\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Orders...\" icon=\"view_all\" type = \"orders\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Orders;\n","/Users/trapbookpro/Development/hwfront/src/components/Store/Listings.js",["488"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayListings = () => {};\n\nconst Listings = (props) => {\n  const { listings, handleDelete } = props;\n\n  const formatListings = (listings) => {\n    let arr = []; \n    for (const [key, value] of Object.entries(listings)) {\n      arr.push(value)\n    }\n\n    return arr; \n  }\n\n\n  displayListings = (listings, num_items = \"\") => {\n    listings = formatListings(listings);\n    if (num_items === \"\") {\n      num_items = listings.length;\n    }\n    return listings.slice(0, num_items).map((listing) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n          key = {listing.id}\n        >\n        \n          <MediaCard\n            name={listing.name}\n            store_email={listing.store_email}\n            available={listing.available}\n            store_name={listing.store_name}\n            quantity={listing.quantity}\n            date_posted={listing.date}\n            id={listing.id}\n            type=\"listing\"\n            role=\"Store\"\n            handleDelete = {handleDelete}\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Your Current Listings</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {listings ? displayListings(listings, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/listings\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Listings...\" icon=\"view_all\" type = \"listings\" />\n              </Link>\n            </Grid>\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/newlisting\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"Create New Listing...\" icon=\"add\" type = \"listings\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Listings;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Orders.js",["489","490"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayOrders = () => {};\n\nconst Orders = (props) => {\n  const { orders } = props;\n\n  const sortOrders = (orders) => {\n    orders.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date)\n    })\n    return orders;\n  }\n\n\n  displayOrders = (orders, num_items = \"\") => {\n    orders = sortOrders(orders); \n    if (num_items === \"\") {\n      num_items = orders.length;\n    }\n\n    return orders.slice(0, num_items).map((order) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n          key = {order.id}\n        >\n          <MediaCard\n            name={order.name}\n            store_email={order.store_email}\n            store_name={order.store_name}\n            quantity={order.quantity}\n            date_posted={order.date}\n            available=\"Not Applicable\"\n            id={order.id}\n            type=\"order\"\n            order_status={order.order_status}\n            className=\"orders-card\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Ongoing Orders</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {orders ? displayOrders(orders, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/allOrders\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2 name=\"See All Orders...\" icon=\"view_all\" type = \"orders\" />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Orders;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Listings.js",["491"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\n\nexport let displayListings = (lis, num_items = \"\") => {};\n\nconst Listings = (props) => {\n  const { listings } = props;\n\n  const formatListings = (listings) => {\n    let arr = [];\n    for (const [key, value] of Object.entries(listings)) {\n      arr.push(value);\n    }\n\n    return arr;\n  };\n\n  displayListings = (lis, num_items = \"\") => {\n    lis = formatListings(lis);\n    if (num_items === \"\") {\n      num_items = lis.length;\n    }\n    return lis.slice(0, num_items).map((listing) => {\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={listing.name}\n            store_email={listing.store_email}\n            available={listing.available}\n            store_name={listing.store_name}\n            quantity={listing.quantity}\n            date_posted={listing.date}\n            id={listing.id}\n            type=\"listing\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Current Listings</h2>\n      <Grid container spacing={2} style={{ marginTop: \"2%\" }}>\n        <Grid item xs={9}>\n          <div className=\"orders\">\n            {listings ? displayListings(listings, 3) : null}\n            <Grid\n              item\n              xs={3}\n              style={{ display: \"inline-flex\", marginLeft: \"10px\" }}\n            >\n              <Link to=\"/listings\" style={{ textDecoration: \"None\" }}>\n                <MediaCard2\n                  name=\"See All Listings...\"\n                  icon=\"view_all\"\n                  type=\"listings\"\n                />\n              </Link>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Listings;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/ProgressBar.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Store/Requests.js",["492"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\nimport { Link } from \"react-router-dom\";\n\nexport let displayRequests = () => {}; \n\nconst Requests = (props) => {\n  const { requests, handleDeleteRequest } = props;\n\n  displayRequests = (req, num_items=\"\") => {\n    if (num_items === \"\"){\n      num_items = req.length\n    }\n\n    return requests.slice(0, num_items).map((request) => {\n     const requestLink = `/viewrequest/${request.id}`;\n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n          key = {request.id}\n        >\n        <Link className = \"orderLink\" to = {requestLink}>\n            <MediaCard\n                name={request.item_name}\n                store_email={request.store_email}\n                store_name={request.store_name}\n                shelter_name = {request.shelter_name}\n                quantity={request.item_quantity}\n                status={request.request_status}\n                available=\"Not Applicable\"\n                id={request.id}\n                request_date={request.request_date}\n                type=\"request\"\n            />\n        </Link>\n        \n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Received Requests</h2>\n      <div className=\"current_requests\">\n        {requests ? displayRequests(requests, 3) : null}\n        <Grid item xs={3} style={{ display: \"inline-flex\" }}>\n          <Link to=\"/allRequests\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"See All Requests...\" icon=\"view_all\" type = \"requests\"/>\n          </Link>\n        </Grid>\n      </div>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Requests;\n","/Users/trapbookpro/Development/hwfront/src/components/Map.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Shelter/SupportedStores.js",["493"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Link } from \"react-router-dom\";\n\nconst SupportedStores = (props) => {\n  const { stores } = props;\n  const displayStores = () => {\n    return stores.map((store) => {\n      let profileLink = `/profile/${store.email}`\n      let listingsLink = `${profileLink}#listings-from-store`\n      return (\n        <Grid item xs={6}>\n          <div className=\"store_information\">\n            <div className=\"store_picture\">\n              <img width=\"100%\" height=\"300\" src={store.image}></img>\n            </div>\n            <h2 className=\"store_title\">{store.name}</h2>\n            <p className=\"store_location\">{store.location}</p>\n            <p className=\"store_phone\">{store.phone}</p>\n            <div className=\"store_information_buttons\">\n              <Link className=\"store_links_1\" to = {listingsLink}>View Listings</Link>\n              <Link className=\"store_links_2\" to = {profileLink}>Store Profile</Link>\n            </div>\n          </div>\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Stores Currently Supported</h2>\n      <Grid container spacing={2}>\n        {displayStores()}\n      </Grid>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default SupportedStores;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Requests.js",["494"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport MediaCard from \"./Card\";\nimport MediaCard2 from \"./Card2\";\nimport { Link } from \"react-router-dom\";\n\nexport let displayRequests = () => {};\n\nconst Requests = (props) => {\n  const { requests, handleDeleteRequest } = props;\n\n\n  const sortRequests = (requests) => {\n    requests.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date)\n    })\n    return requests;\n  }\n\n  displayRequests = (req, num_items = \"\") => {\n    if (num_items == \"\"){\n      num_items = req.length\n    }\n\n    req = sortRequests(requests); \n\n    return req.slice(0, num_items).map((request) => {\n      \n      return (\n        <Grid\n          item\n          xs={3}\n          style={{ display: \"inline-flex\", marginRight: \"10px\" }}\n        >\n          <MediaCard\n            name={request.item_name}\n            store_email={request.store_email}\n            store_name={request.store_name}\n            quantity={request.item_quantity}\n            request_status={request.request_status}\n            available=\"Not Applicable\"\n            id={request.id}\n            request_date={request.request_date}\n            handleDelete={handleDeleteRequest}\n            type=\"request\"\n          />\n        </Grid>\n      );\n    });\n  };\n\n  return (\n    <div class=\"homepage-section\">\n      <h2 class=\"section-title\">Current Requests</h2>\n      <div className=\"current_requests\">\n        {requests ? displayRequests(requests, 3) : null}\n        <Grid item xs={3} style={{ display: \"inline-flex\" }}>\n        <Link to=\"/allRequests\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"See All Requests...\" icon=\"view_all\" />\n          </Link>\n          <Link to=\"/request\" style={{ textDecoration: \"None\" }}>\n            <MediaCard2 name=\"Make a New Request...\" icon=\"plus\" />\n          </Link>\n        </Grid>\n      </div>\n      <div className=\"border\" />\n    </div>\n  );\n};\n\nexport default Requests;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Card2.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Table.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Footer.js",["495","496","497","498","499"],"/Users/trapbookpro/Development/hwfront/src/components/Store/Card.js",["500","501","502","503"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MediaCard(props) {\n  const { name, store_email, shelter_name, available, handleDelete, store_name, quantity, date_posted, request_status, id, handleRequestDelete, type, request_date, order_status } =\n    props;\n\n    const orderLink = `viewOrder/${id}`; \n\n    if (type === \"order\"){\n\n      return (\n        <Link className = \"orderLink\" to = {orderLink}>\n        <Card sx={{ maxWidth: 345 }} style = {{marginBottom : '10%'}}>\n          <CardMedia height=\"140\" alt=\"green iguana\" />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n              {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n            </Typography>\n            <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              {shelter_name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n              Quantity: {quantity}\n            </Typography>\n    \n            \n            {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n                Status : {order_status === \"Order Sent\" ? \"Order Received\" : order_status}\n            </Typography>: null}\n            {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Order Date: {date_posted.slice(0,10)}\n            </Typography>: null}\n            \n            {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Request Date: {request_date.slice(0,10)}\n              </Typography> : null}\n    \n            {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n              Status: {request_status}\n            </Typography>: null }\n    \n            {available !== \"Not Applicable\" ? available === true ? (\n              <Typography variant=\"body2\" color=\"green\">\n                Currently Available\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" color=\"red\">\n                Currently Unavailable\n              </Typography>\n            ) : null}\n          </CardContent>\n\n          {/* {available !== \"Not Applicable\" ? <CardActions>\n            {console.log(id)}\n            <Link className = \"order-link\" style = {{textDecoration : \"None\"}} to = {`/order/${id}`}>Order</Link>\n          </CardActions> : <CardActions>\n            {type === \"request\" ?  <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a> : null\n    }\n          </CardActions>} */}\n          \n        </Card>\n        </Link>\n      );\n    }\n\n    else {\n      return ( <Card sx={{ maxWidth: 345 }}>\n        <CardMedia height=\"140\" alt=\"green iguana\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"div\" style = {{marginBottom : '8%'}}>\n            {type === \"order\" ? <Link className = \"orderLink\" to = {orderLink}>{ name} </Link> : name }\n          </Typography>\n          <Typography variant=\"body1\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            {shelter_name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '5%'}}>\n            Quantity: {quantity}\n          </Typography>\n  \n          \n          {type === \"order\" ? <Typography variant = \"body2\" color = \"text-secondary\" style = {{marginBottom : '5%'}}>\n              Status : {order_status}\n          </Typography>: null}\n          {type === \"order\" && date_posted ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Order Date: {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n          </Typography>: null}\n          \n          {type === \"request\" && request_date ? <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Request Date: {request_date.slice(0,10)}\n            </Typography> : null}\n  \n          {request_status?  <Typography variant=\"body2\" color=\"text-secondary\" style = {{marginBottom : '3%'}}>\n            Status: {request_status}\n          </Typography>: null }\n  \n          {available !== \"Not Applicable\" ? available === true ? (\n            <Typography variant=\"body2\" color=\"green\">\n              Currently Available\n            </Typography>\n          ) : (\n            <Typography variant=\"body2\" color=\"red\">\n              Currently Unavailable\n            </Typography>\n          ) : null}\n        </CardContent>\n\n         \n          \n    {type === \"listing\" ? \n        <CardActions> \n            <a className = \"order-link\" onClick = {() => handleDelete(id)} style = {{textDecoration : \"None\", textAlign : 'Center'}}>Delete</a>\n\n        </CardActions> : null}\n        \n      </Card>)\n    }\n\n\n\n}\n","/Users/trapbookpro/Development/hwfront/src/components/Store/Card2.js",[],"/Users/trapbookpro/Development/hwfront/src/components/Shelter/Card.js",["504","505","506"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\n\nexport default function MediaCard(props) {\n  const {\n    name,\n    store_email,\n    available,\n    store_name,\n    quantity,\n    date_posted,\n    request_status,\n    id,\n    handleDelete,\n    type,\n    request_date,\n    order_status,\n  } = props;\n\n  const orderLink = `viewOrder/${id}`;\n\n  if (type === \"order\") {\n    return (\n      <Link className=\"orderLink\" to={orderLink}>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardMedia height=\"140\" alt=\"green iguana\" />\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h6\"\n              component=\"div\"\n              style={{ marginBottom: \"8%\" }}\n            >\n              {type === \"order\" ? (\n                <Link className=\"orderLink\" to={orderLink}>\n                  {name}{\" \"}\n                </Link>\n              ) : (\n                name\n              )}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              {store_name}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              Quantity: {quantity}\n            </Typography>\n\n            {type === \"order\" ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"5%\" }}\n              >\n                Status : {order_status}\n              </Typography>\n            ) : null}\n            {type === \"order\" && date_posted ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Order Date: {date_posted.slice(0, 10)}\n              </Typography>\n            ) : null}\n\n            {type === \"request\" && request_date ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Request Date:{\" \"}\n                {new Date(request_date.seconds * 1000).toString().slice(0, 15)}\n              </Typography>\n            ) : null}\n\n            {request_status ? (\n              <Typography\n                variant=\"body2\"\n                color=\"text-secondary\"\n                style={{ marginBottom: \"3%\" }}\n              >\n                Status: {request_status}\n              </Typography>\n            ) : null}\n\n            {available !== \"Not Applicable\" ? (\n              available === true ? (\n                <Typography variant=\"body2\" color=\"green\">\n                  Currently Available\n                </Typography>\n              ) : (\n                <Typography variant=\"body2\" color=\"red\">\n                  Currently Unavailable\n                </Typography>\n              )\n            ) : null}\n          </CardContent>\n          {available !== \"Not Applicable\" ? (\n            <CardActions>\n              <Link\n                className=\"order-link\"\n                style={{ textDecoration: \"None\" }}\n                to={`/order/${id}`}\n              >\n                Order\n              </Link>\n            </CardActions>\n          ) : (\n            <CardActions>\n              {type === \"request\" ? (\n                <a\n                  className=\"order-link\"\n                  onClick={() => handleDelete(id)}\n                  style={{ textDecoration: \"None\", textAlign: \"Center\" }}\n                >\n                  Delete\n                </a>\n              ) : null}\n            </CardActions>\n          )}\n        </Card>\n      </Link>\n    );\n  } else {\n    return (\n      <Card sx={{ maxWidth: 345 }}>\n        <CardMedia height=\"140\" alt=\"green iguana\" />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            component=\"div\"\n            style={{ marginBottom: \"8%\" }}\n          >\n            {type === \"order\" ? (\n              <Link className=\"orderLink\" to={orderLink}>\n                {name}{\" \"}\n              </Link>\n            ) : (\n              name\n            )}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"text-secondary\"\n            style={{ marginBottom: \"5%\" }}\n          >\n            {store_name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"text-secondary\"\n            style={{ marginBottom: \"5%\" }}\n          >\n            Quantity: {quantity}\n          </Typography>\n\n          {type === \"order\" ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"5%\" }}\n            >\n              Status : {order_status}\n            </Typography>\n          ) : null}\n          {type === \"order\" && date_posted ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Order Date:{\" \"}\n              {new Date(date_posted.seconds * 1000).toString().slice(0, 15)}\n            </Typography>\n          ) : null}\n\n          {type === \"request\" && request_date ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Request Date:{\" \"}\n              {request_date.seconds\n                ? new Date(request_date.seconds * 1000).toString().slice(0, 15)\n                : request_date.slice(0, 10)}\n            </Typography>\n          ) : null}\n\n          {request_status ? (\n            <Typography\n              variant=\"body2\"\n              color=\"text-secondary\"\n              style={{ marginBottom: \"3%\" }}\n            >\n              Status: {request_status}\n            </Typography>\n          ) : null}\n\n          {available !== \"Not Applicable\" ? (\n            available === true ? (\n              <Typography variant=\"body2\" color=\"green\">\n                Currently Available\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" color=\"red\">\n                Currently Unavailable\n              </Typography>\n            )\n          ) : null}\n        </CardContent>\n        {available !== \"Not Applicable\" ? (\n          <CardActions>\n            <Link\n              className=\"order-link\"\n              style={{ textDecoration: \"None\" }}\n              to={`/order/${id}`}\n            >\n              Order\n            </Link>\n          </CardActions>\n        ) : (\n          <CardActions>\n            {type === \"request\" ? (\n              <a\n                className=\"order-link\"\n                onClick={() => handleDelete(id)}\n                style={{ textDecoration: \"None\", textAlign: \"Center\" }}\n              >\n                Delete\n              </a>\n            ) : null}\n          </CardActions>\n        )}\n      </Card>\n    );\n  }\n}\n","/Users/trapbookpro/Development/hwfront/src/components/Store/Financials.js",["507","508"],"import React, {useState, useEffect} from 'react'; \nimport Navbar from '../Navbar';\nimport {getOrders2, getTotalValue} from '../../functions/index'; \nimport BasicTable from '../Table'; \nimport Grid from \"@mui/material/Grid\";\n\nconst ShelterFinancials = (props) => {\n\n    const {userDetails} = props; \n\n    const [orders, setOrders] = useState(); \n    \n    const [totalValue, setTotalValue] = useState(0); \n\n    useEffect(async () => {\n        await getOrders2(userDetails.email, setOrders);\n        await getTotalValue(userDetails.email, setTotalValue);\n    }, [])\n\n    return (\n    <div className = \"hero\">\n        <Navbar />\n        <h2 class=\"section-title\" style = {{marginBottom : '2%'}}>Your Financials</h2>\n        <Grid container spacing = {8}>\n        <Grid item xs = {9}>\n            {orders ? <BasicTable columns = {['Total Value', 'Shelter Name', 'Quantity', 'Order Date', 'Status', 'View Details']} rows = {orders} totalValue = {totalValue} usedIn = \"Store Financials\" /> : \"Loading...\"}\n        </Grid>\n        <Grid item xs = {3}>\n            <div className = \"store_information\" style = {{height: '95%'}}>\n                <div style = {{margin : '20% auto', fontSize : '150%'}}>You've donated a total value of <span style = {{fontWeight : \"bold\"}}>${totalValue}</span> !</div>\n            </div>\n        </Grid>\n        </Grid>\n        \n       </div>\n        )\n}\n\nexport default ShelterFinancials;","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Match.js",["509","510","511","512","513","514","515"],"import React, { useState, useEffect } from \"react\";\nimport { getDistance } from \"geolib\";\nimport Navbar from \"../Navbar\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport MapContainer from \"../Map\";\n\nconst Match = (props) => {\n  const { userDetails, stores } = props;\n\n  const [distances, setDistances] = useState([]);\n\n  const convertToMiles = (meters) => {\n    return (meters * 0.000621371).toFixed(3);\n  };\n\n  const sortArray = (obj) => {\n    let distances = [];\n    let result = [];\n\n    obj.map((store) => {\n      distances.push(store[Object.keys(store)[0]]);\n    });\n    distances.sort((a, b) => {\n      return a - b;\n    });\n\n    distances.forEach((distance) => {\n      obj.map((object) => {\n        if (object[Object.keys(object)[0]] == distance) {\n          let newObj = {};\n          newObj[Object.keys(object)[0]] = distance;\n          result.push(newObj);\n        }\n      });\n    });\n    return result;\n  };\n\n  const getDistances = () => {\n    let distancesArray = [];\n\n    stores.forEach((store) => {\n      let obj = {};\n\n      let userCoords = {\n        latitude: userDetails.latitude,\n        longitude: userDetails.longitude,\n      };\n\n      let storeCoords = {\n        latitude: store.latitude,\n        longitude: store.longitude,\n      };\n\n      let distance = getDistance(userCoords, storeCoords, 1);\n\n      obj[store.name] = distance;\n      distancesArray.push(obj);\n    });\n\n    distancesArray = sortArray(distancesArray);\n    setDistances(distancesArray);\n  };\n\n  const displayStores = (distances) => {\n    return distances.map((distance_to_store) => {\n      return stores.map((store) => {\n        if (store.name == Object.keys(distance_to_store)[0]) {\n          let profileLink = `/profile/${store.email}`;\n          let listingsLink = `${profileLink}#listings-from-store`;\n\n          return (\n            <Grid container spacing={8}>\n              <Grid item xs={7.5}>\n                <div\n                  className=\"store_information\"\n                  style={{ margin: \"2% 0\", width: \"100%\" }}\n                >\n                  <div className=\"store_picture\">\n                    <img width=\"100%\" height=\"300\" src={store.image}></img>\n                  </div>\n                  <h2 className=\"store_title\">{store.name}</h2>\n                  <h3 className=\"store_title\">\n                    Distance :{\" \"}\n                    <span style={{ fontWeight: \"bold\" }}>\n                      {convertToMiles(\n                        distance_to_store[Object.keys(distance_to_store)[0]]\n                      )}{\" \"}\n                      miles\n                    </span>\n                  </h3>\n                  <p className=\"store_location\">{store.location}</p>\n                  <p className=\"store_phone\">{store.phone}</p>\n                  <div className=\"store_information_buttons\">\n                    <Link className=\"store_links_1\" to={listingsLink}>\n                      View Listings\n                    </Link>\n                    <Link className=\"store_links_2\" to={profileLink}>\n                      Store Profile\n                    </Link>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={4.5}>\n                <div style={{ margin: \"2% 0\" }}>\n                  <MapContainer\n                    height=\"600px\"\n                    shelterName={userDetails.name}\n                    storeName={store.name}\n                    latlng1={{\n                      latitude: userDetails.latitude,\n                      longitude: userDetails.longitude,\n                    }}\n                    latlng2={{\n                      latitude: store.latitude,\n                      longitude: store.longitude,\n                    }}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          );\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    getDistances();\n  }, []);\n\n  return (\n    <div className=\"hero\">\n      <Navbar />\n      <h1 className=\"section-title\" style={{ marginBottom: \"2%\" }}>\n        Find a Match\n      </h1>\n      <h2\n        className=\"section-title\"\n        style={{ textAlign: \"center\", marginBottom: \"2%\" }}\n      >\n        Here is a list of the best matches according to your location:\n      </h2>\n      {distances ? displayStores(distances) : null}\n    </div>\n  );\n};\n\nexport default Match;\n","/Users/trapbookpro/Development/hwfront/src/components/Shelter/Financials.js",["516","517"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { getOrders2, getTotalValue } from \"../../functions/index\";\nimport BasicTable from \"../Table\";\nimport Grid from \"@mui/material/Grid\";\n\nconst ShelterFinancials = (props) => {\n  const { userDetails } = props;\n\n  const [orders, setOrders] = useState();\n\n  const [totalValue, setTotalValue] = useState(0);\n\n  useEffect(async () => {\n    await getOrders2(userDetails.email, setOrders);\n    await getTotalValue(userDetails.email, setTotalValue);\n  }, []);\n\n  return (\n    <div className=\"hero\">\n      <Navbar />\n      <h2 class=\"section-title\" style={{ marginBottom: \"2%\" }}>\n        Your Financials\n      </h2>\n      <Grid container spacing={8}>\n        <Grid item xs={9}>\n          {orders ? (\n            <BasicTable\n              columns={[\n                \"Total Value\",\n                \"Store\",\n                \"Quantity\",\n                \"Order Date\",\n                \"Status\",\n                \"View Details\",\n              ]}\n              rows={orders}\n              totalValue={totalValue}\n              usedIn=\"Financials\"\n            />\n          ) : (\n            \"Loading...\"\n          )}\n        </Grid>\n        <Grid item xs={3}>\n          <div className=\"store_information\" style={{ height: \"95%\" }}>\n            <div style={{ margin: \"20% auto\", fontSize: \"150%\" }}>\n              You've received a total value of{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>${totalValue}</span> through\n              donations!\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ShelterFinancials;\n","/Users/trapbookpro/Development/hwfront/src/components/Store/SheltersMap.js",["518","519","520"],"import React, { useEffect } from \"react\";\nimport { getAllShelters } from \"../../functions/index\";\n\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.setApiKey(\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\");\n\nclass SheltersMap extends React.Component {\n  state = {\n    shelterCoords: {},\n    isOpen: false,\n    loading: true,\n  };\n\n  mapStyles = {\n    height: \"500px\",\n    width: \"100%\",\n  };\n\n  getShelterCoords() {\n    let resultsArray = [];\n\n    this.props.shelters.map((shelter) => {\n      let obj = {\n        lat: shelter.latitude,\n        lng: shelter.longitude,\n        name: shelter.name,\n      };\n      resultsArray.push(obj);\n    });\n\n    this.setState({ shelterCoords: resultsArray, loading: false });\n  }\n\n  async componentDidMount() {\n    this.getShelterCoords();\n  }\n\n  displayMarkers() {\n    return this.state.shelterCoords.map((shelterCoord) => {\n      return (\n        <Marker\n         animation = \"DROP\"\n          position={{ lat: shelterCoord.lat, lng: shelterCoord.lng }}\n          onClick={() => {\n            this.setState({ isOpen: !this.state.isOpen });\n          }}\n          >\n\n          {this.state.isOpen ? (\n            <InfoWindow\n              position={{ lat: shelterCoord.lat, lng: shelterCoord.lng }}\n              onCloseClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            >\n              <p>{shelterCoord.name}</p>\n            </InfoWindow>\n          ) : null}\n\n        </Marker>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 class = \"section-title\">Shelters Near You</h2>\n        {!this.state.loading ? (\n          <div style={{ margin : \"2% auto\" }}>\n            <LoadScript googleMapsApiKey=\"AIzaSyAQGsvrhfxDeNrqgubmm4G9xC1sBpS5xSg\">\n              <GoogleMap\n                mapContainerStyle={this.mapStyles}\n                zoom={11}\n                center={{\n                  lat: this.props.userDetails.latitude,\n                  lng: this.props.userDetails.longitude,\n                }}\n              >\n                {this.displayMarkers()}\n                \n                        <Marker\n                position={{ lat: this.props.userDetails.latitude, lng: this.props.userDetails.longitude }}\n                onClick={() => {\n                    this.setState({ isOpen: !this.state.isOpen });\n                }}\n            onLoad={marker => {\n                const customIcon = (opts) => Object.assign({\n                path: 'M12.75 0l-2.25 2.25 2.25 2.25-5.25 6h-5.25l4.125 4.125-6.375 8.452v0.923h0.923l8.452-6.375 4.125 4.125v-5.25l6-5.25 2.25 2.25 2.25-2.25-11.25-11.25zM10.5 12.75l-1.5-1.5 5.25-5.25 1.5 1.5-5.25 5.25z',\n                fillColor: '#000000',\n                fillOpacity: 1,\n                strokeColor: '#000',\n                strokeWeight: 1,\n                scale: 1.3,\n                }, opts);\n\n            marker.setIcon(customIcon({\n              fillColor: 'green',\n              strokeColor: 'white'\n            }))}}\n          >\n\n          {this.state.isOpen ? (\n            <InfoWindow\n              position={{ lat: this.props.userDetails.latitude, lng: this.props.userDetails.longitude }}\n              onCloseClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            >\n              <p>{this.props.userDetails.name}</p>\n            </InfoWindow>\n          ) : null}\n\n        </Marker>\n              </GoogleMap>\n            </LoadScript>\n          </div>\n        ) : (\n          \"Loading...\"\n        )}\n        \n        <div className = \"border\" />\n      </div>\n    );\n  }\n}\n\nexport default SheltersMap;\n",{"ruleId":"521","replacedBy":"522"},{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","severity":1,"message":"526","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":12},{"ruleId":"525","severity":1,"message":"529","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":16},{"ruleId":"525","severity":1,"message":"530","line":6,"column":10,"nodeType":"527","messageId":"528","endLine":6,"endColumn":22},{"ruleId":"525","severity":1,"message":"531","line":30,"column":3,"nodeType":"527","messageId":"528","endLine":30,"endColumn":16},{"ruleId":"525","severity":1,"message":"532","line":57,"column":9,"nodeType":"527","messageId":"528","endLine":57,"endColumn":20},{"ruleId":"525","severity":1,"message":"533","line":63,"column":9,"nodeType":"527","messageId":"528","endLine":63,"endColumn":20},{"ruleId":"534","severity":1,"message":"535","line":76,"column":16,"nodeType":"536","messageId":"537","endLine":76,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":79,"column":6,"nodeType":"540","endLine":79,"endColumn":14,"suggestions":"541"},{"ruleId":"525","severity":1,"message":"542","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":23},{"ruleId":"538","severity":1,"message":"543","line":13,"column":8,"nodeType":"540","endLine":13,"endColumn":10,"suggestions":"544"},{"ruleId":"534","severity":1,"message":"535","line":19,"column":30,"nodeType":"536","messageId":"537","endLine":19,"endColumn":32},{"ruleId":"525","severity":1,"message":"545","line":4,"column":27,"nodeType":"527","messageId":"528","endLine":4,"endColumn":45},{"ruleId":"538","severity":1,"message":"546","line":22,"column":10,"nodeType":"540","endLine":22,"endColumn":12,"suggestions":"547"},{"ruleId":"538","severity":1,"message":"543","line":16,"column":10,"nodeType":"540","endLine":16,"endColumn":12,"suggestions":"548"},{"ruleId":"538","severity":1,"message":"549","line":19,"column":13,"nodeType":"550","endLine":21,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":21,"column":6,"nodeType":"540","endLine":21,"endColumn":8,"suggestions":"552"},{"ruleId":"538","severity":1,"message":"549","line":24,"column":13,"nodeType":"550","endLine":28,"endColumn":4},{"ruleId":"525","severity":1,"message":"553","line":7,"column":3,"nodeType":"527","messageId":"528","endLine":7,"endColumn":21},{"ruleId":"538","severity":1,"message":"549","line":36,"column":13,"nodeType":"550","endLine":38,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":38,"column":6,"nodeType":"540","endLine":38,"endColumn":22,"suggestions":"554"},{"ruleId":"538","severity":1,"message":"549","line":40,"column":13,"nodeType":"550","endLine":43,"endColumn":4},{"ruleId":"525","severity":1,"message":"555","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"556","line":21,"column":21,"nodeType":"527","messageId":"528","endLine":21,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":32,"column":26,"nodeType":"550","messageId":"559","endLine":32,"endColumn":28},{"ruleId":"534","severity":1,"message":"535","line":33,"column":35,"nodeType":"536","messageId":"537","endLine":33,"endColumn":37},{"ruleId":"538","severity":1,"message":"549","line":41,"column":15,"nodeType":"550","endLine":49,"endColumn":6},{"ruleId":"538","severity":1,"message":"560","line":49,"column":8,"nodeType":"540","endLine":49,"endColumn":22,"suggestions":"561"},{"ruleId":"562","severity":1,"message":"563","line":61,"column":25,"nodeType":"564","endLine":61,"endColumn":89},{"ruleId":"538","severity":1,"message":"551","line":18,"column":6,"nodeType":"540","endLine":18,"endColumn":8,"suggestions":"565"},{"ruleId":"525","severity":1,"message":"566","line":19,"column":44,"nodeType":"527","messageId":"528","endLine":19,"endColumn":50},{"ruleId":"538","severity":1,"message":"549","line":24,"column":13,"nodeType":"550","endLine":28,"endColumn":4},{"ruleId":"538","severity":1,"message":"543","line":28,"column":6,"nodeType":"540","endLine":28,"endColumn":8,"suggestions":"567"},{"ruleId":"525","severity":1,"message":"568","line":88,"column":7,"nodeType":"527","messageId":"528","endLine":88,"endColumn":14},{"ruleId":"569","severity":1,"message":"570","line":217,"column":7,"nodeType":"571","messageId":"572","endLine":226,"endColumn":8},{"ruleId":"525","severity":1,"message":"573","line":232,"column":5,"nodeType":"527","messageId":"528","endLine":232,"endColumn":10},{"ruleId":"569","severity":1,"message":"570","line":261,"column":7,"nodeType":"571","messageId":"572","endLine":269,"endColumn":8},{"ruleId":"574","severity":1,"message":"575","line":276,"column":15,"nodeType":"527","messageId":"576","endLine":276,"endColumn":20},{"ruleId":"538","severity":1,"message":"549","line":15,"column":13,"nodeType":"550","endLine":17,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":17,"column":6,"nodeType":"540","endLine":17,"endColumn":8,"suggestions":"577"},{"ruleId":"538","severity":1,"message":"549","line":21,"column":13,"nodeType":"550","endLine":26,"endColumn":4},{"ruleId":"538","severity":1,"message":"549","line":24,"column":13,"nodeType":"550","endLine":28,"endColumn":4},{"ruleId":"538","severity":1,"message":"543","line":28,"column":6,"nodeType":"540","endLine":28,"endColumn":8,"suggestions":"578"},{"ruleId":"525","severity":1,"message":"579","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"525","severity":1,"message":"530","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":22},{"ruleId":"525","severity":1,"message":"580","line":3,"column":24,"nodeType":"527","messageId":"528","endLine":3,"endColumn":40},{"ruleId":"525","severity":1,"message":"581","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":11},{"ruleId":"557","severity":1,"message":"558","line":34,"column":22,"nodeType":"550","messageId":"559","endLine":34,"endColumn":24},{"ruleId":"525","severity":1,"message":"582","line":10,"column":21,"nodeType":"527","messageId":"528","endLine":10,"endColumn":40},{"ruleId":"534","severity":1,"message":"535","line":13,"column":19,"nodeType":"536","messageId":"537","endLine":13,"endColumn":21},{"ruleId":"525","severity":1,"message":"579","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"525","severity":1,"message":"583","line":1,"column":28,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"525","severity":1,"message":"556","line":14,"column":17,"nodeType":"527","messageId":"528","endLine":14,"endColumn":20},{"ruleId":"534","severity":1,"message":"535","line":13,"column":19,"nodeType":"536","messageId":"537","endLine":13,"endColumn":21},{"ruleId":"525","severity":1,"message":"556","line":14,"column":17,"nodeType":"527","messageId":"528","endLine":14,"endColumn":20},{"ruleId":"525","severity":1,"message":"584","line":12,"column":19,"nodeType":"527","messageId":"528","endLine":12,"endColumn":30},{"ruleId":"525","severity":1,"message":"585","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":14},{"ruleId":"525","severity":1,"message":"581","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":11},{"ruleId":"525","severity":1,"message":"586","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":15},{"ruleId":"525","severity":1,"message":"587","line":5,"column":8,"nodeType":"527","messageId":"528","endLine":5,"endColumn":18},{"ruleId":"525","severity":1,"message":"588","line":6,"column":8,"nodeType":"527","messageId":"528","endLine":6,"endColumn":14},{"ruleId":"525","severity":1,"message":"589","line":7,"column":8,"nodeType":"527","messageId":"528","endLine":7,"endColumn":18},{"ruleId":"525","severity":1,"message":"590","line":9,"column":26,"nodeType":"527","messageId":"528","endLine":9,"endColumn":32},{"ruleId":"525","severity":1,"message":"591","line":9,"column":34,"nodeType":"527","messageId":"528","endLine":9,"endColumn":40},{"ruleId":"525","severity":1,"message":"592","line":9,"column":42,"nodeType":"527","messageId":"528","endLine":9,"endColumn":47},{"ruleId":"525","severity":1,"message":"531","line":9,"column":49,"nodeType":"527","messageId":"528","endLine":9,"endColumn":62},{"ruleId":"525","severity":1,"message":"593","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":11},{"ruleId":"525","severity":1,"message":"594","line":11,"column":8,"nodeType":"527","messageId":"528","endLine":11,"endColumn":15},{"ruleId":"525","severity":1,"message":"595","line":12,"column":8,"nodeType":"527","messageId":"528","endLine":12,"endColumn":19},{"ruleId":"525","severity":1,"message":"596","line":13,"column":8,"nodeType":"527","messageId":"528","endLine":13,"endColumn":17},{"ruleId":"525","severity":1,"message":"597","line":17,"column":8,"nodeType":"527","messageId":"528","endLine":17,"endColumn":12},{"ruleId":"525","severity":1,"message":"584","line":17,"column":28,"nodeType":"527","messageId":"528","endLine":17,"endColumn":39},{"ruleId":"598","severity":1,"message":"599","line":22,"column":17,"nodeType":"564","endLine":22,"endColumn":20},{"ruleId":"598","severity":1,"message":"599","line":25,"column":13,"nodeType":"564","endLine":25,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":28,"column":13,"nodeType":"564","endLine":28,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":31,"column":13,"nodeType":"564","endLine":31,"endColumn":57},{"ruleId":"525","severity":1,"message":"583","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":25},{"ruleId":"525","severity":1,"message":"579","line":1,"column":27,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"598","severity":1,"message":"600","line":14,"column":33,"nodeType":"564","endLine":14,"endColumn":45},{"ruleId":"598","severity":1,"message":"600","line":15,"column":33,"nodeType":"564","endLine":15,"endColumn":45},{"ruleId":"598","severity":1,"message":"600","line":23,"column":79,"nodeType":"564","endLine":23,"endColumn":91},{"ruleId":"598","severity":1,"message":"600","line":23,"column":133,"nodeType":"564","endLine":23,"endColumn":145},{"ruleId":"598","severity":1,"message":"600","line":23,"column":189,"nodeType":"564","endLine":23,"endColumn":201},{"ruleId":"525","severity":1,"message":"601","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"602","line":6,"column":10,"nodeType":"527","messageId":"528","endLine":6,"endColumn":14},{"ruleId":"562","severity":1,"message":"563","line":14,"column":15,"nodeType":"564","endLine":14,"endColumn":64},{"ruleId":"525","severity":1,"message":"603","line":10,"column":17,"nodeType":"527","messageId":"528","endLine":10,"endColumn":28},{"ruleId":"525","severity":1,"message":"604","line":10,"column":69,"nodeType":"527","messageId":"528","endLine":10,"endColumn":79},{"ruleId":"525","severity":1,"message":"605","line":10,"column":124,"nodeType":"527","messageId":"528","endLine":10,"endColumn":143},{"ruleId":"598","severity":1,"message":"599","line":119,"column":13,"nodeType":"564","endLine":119,"endColumn":134},{"ruleId":"525","severity":1,"message":"603","line":12,"column":5,"nodeType":"527","messageId":"528","endLine":12,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":128,"column":17,"nodeType":"564","endLine":132,"endColumn":18},{"ruleId":"598","severity":1,"message":"599","line":243,"column":15,"nodeType":"564","endLine":247,"endColumn":16},{"ruleId":"525","severity":1,"message":"526","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":12},{"ruleId":"525","severity":1,"message":"530","line":6,"column":3,"nodeType":"527","messageId":"528","endLine":6,"endColumn":15},{"ruleId":"525","severity":1,"message":"606","line":28,"column":8,"nodeType":"527","messageId":"528","endLine":28,"endColumn":22},{"ruleId":"525","severity":1,"message":"531","line":35,"column":3,"nodeType":"527","messageId":"528","endLine":35,"endColumn":16},{"ruleId":"525","severity":1,"message":"607","line":42,"column":8,"nodeType":"527","messageId":"528","endLine":42,"endColumn":16},{"ruleId":"525","severity":1,"message":"532","line":64,"column":9,"nodeType":"527","messageId":"528","endLine":64,"endColumn":20},{"ruleId":"525","severity":1,"message":"533","line":70,"column":9,"nodeType":"527","messageId":"528","endLine":70,"endColumn":20},{"ruleId":"538","severity":1,"message":"549","line":76,"column":13,"nodeType":"550","endLine":81,"endColumn":4},{"ruleId":"534","severity":1,"message":"535","line":84,"column":16,"nodeType":"536","messageId":"537","endLine":84,"endColumn":18},{"ruleId":"538","severity":1,"message":"539","line":87,"column":6,"nodeType":"540","endLine":87,"endColumn":14,"suggestions":"608"},{"ruleId":"525","severity":1,"message":"542","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":23},{"ruleId":"525","severity":1,"message":"609","line":24,"column":5,"nodeType":"527","messageId":"528","endLine":24,"endColumn":19},{"ruleId":"538","severity":1,"message":"546","line":22,"column":10,"nodeType":"540","endLine":22,"endColumn":12,"suggestions":"610"},{"ruleId":"538","severity":1,"message":"543","line":16,"column":10,"nodeType":"540","endLine":16,"endColumn":12,"suggestions":"611"},{"ruleId":"525","severity":1,"message":"612","line":4,"column":7,"nodeType":"527","messageId":"528","endLine":4,"endColumn":9},{"ruleId":"569","severity":1,"message":"570","line":244,"column":7,"nodeType":"571","messageId":"572","endLine":253,"endColumn":8},{"ruleId":"525","severity":1,"message":"573","line":259,"column":5,"nodeType":"527","messageId":"528","endLine":259,"endColumn":10},{"ruleId":"538","severity":1,"message":"543","line":13,"column":8,"nodeType":"540","endLine":13,"endColumn":10,"suggestions":"613"},{"ruleId":"534","severity":1,"message":"535","line":19,"column":30,"nodeType":"536","messageId":"537","endLine":19,"endColumn":32},{"ruleId":"538","severity":1,"message":"549","line":16,"column":13,"nodeType":"550","endLine":18,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":18,"column":6,"nodeType":"540","endLine":18,"endColumn":8,"suggestions":"614"},{"ruleId":"538","severity":1,"message":"549","line":21,"column":13,"nodeType":"550","endLine":26,"endColumn":4},{"ruleId":"562","severity":1,"message":"563","line":109,"column":43,"nodeType":"564","endLine":109,"endColumn":147},{"ruleId":"538","severity":1,"message":"551","line":19,"column":6,"nodeType":"540","endLine":19,"endColumn":8,"suggestions":"615"},{"ruleId":"525","severity":1,"message":"555","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":19},{"ruleId":"525","severity":1,"message":"556","line":23,"column":21,"nodeType":"527","messageId":"528","endLine":23,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":34,"column":26,"nodeType":"550","messageId":"559","endLine":34,"endColumn":28},{"ruleId":"534","severity":1,"message":"535","line":35,"column":35,"nodeType":"536","messageId":"537","endLine":35,"endColumn":37},{"ruleId":"538","severity":1,"message":"549","line":43,"column":15,"nodeType":"550","endLine":45,"endColumn":6},{"ruleId":"538","severity":1,"message":"539","line":45,"column":8,"nodeType":"540","endLine":45,"endColumn":10,"suggestions":"616"},{"ruleId":"538","severity":1,"message":"549","line":47,"column":15,"nodeType":"550","endLine":55,"endColumn":6},{"ruleId":"538","severity":1,"message":"543","line":55,"column":8,"nodeType":"540","endLine":55,"endColumn":22,"suggestions":"617"},{"ruleId":"562","severity":1,"message":"563","line":66,"column":25,"nodeType":"564","endLine":66,"endColumn":89},{"ruleId":"538","severity":1,"message":"549","line":24,"column":13,"nodeType":"550","endLine":28,"endColumn":4},{"ruleId":"538","severity":1,"message":"543","line":28,"column":6,"nodeType":"540","endLine":28,"endColumn":8,"suggestions":"618"},{"ruleId":"538","severity":1,"message":"549","line":26,"column":13,"nodeType":"550","endLine":30,"endColumn":4},{"ruleId":"538","severity":1,"message":"543","line":30,"column":6,"nodeType":"540","endLine":30,"endColumn":8,"suggestions":"619"},{"ruleId":"598","severity":1,"message":"599","line":62,"column":11,"nodeType":"564","endLine":62,"endColumn":66},{"ruleId":"557","severity":1,"message":"558","line":36,"column":24,"nodeType":"550","messageId":"559","endLine":36,"endColumn":26},{"ruleId":"538","severity":1,"message":"549","line":19,"column":13,"nodeType":"550","endLine":21,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":21,"column":6,"nodeType":"540","endLine":21,"endColumn":8,"suggestions":"620"},{"ruleId":"538","severity":1,"message":"549","line":23,"column":13,"nodeType":"550","endLine":27,"endColumn":4},{"ruleId":"525","severity":1,"message":"553","line":7,"column":3,"nodeType":"527","messageId":"528","endLine":7,"endColumn":21},{"ruleId":"538","severity":1,"message":"549","line":47,"column":13,"nodeType":"550","endLine":49,"endColumn":4},{"ruleId":"538","severity":1,"message":"551","line":49,"column":6,"nodeType":"540","endLine":49,"endColumn":22,"suggestions":"621"},{"ruleId":"538","severity":1,"message":"549","line":51,"column":13,"nodeType":"550","endLine":54,"endColumn":4},{"ruleId":"562","severity":1,"message":"563","line":152,"column":41,"nodeType":"564","endLine":152,"endColumn":145},{"ruleId":"525","severity":1,"message":"597","line":6,"column":8,"nodeType":"527","messageId":"528","endLine":6,"endColumn":12},{"ruleId":"525","severity":1,"message":"584","line":6,"column":28,"nodeType":"527","messageId":"528","endLine":6,"endColumn":39},{"ruleId":"598","severity":1,"message":"599","line":18,"column":13,"nodeType":"564","endLine":18,"endColumn":57},{"ruleId":"525","severity":1,"message":"584","line":10,"column":19,"nodeType":"527","messageId":"528","endLine":10,"endColumn":30},{"ruleId":"525","severity":1,"message":"556","line":14,"column":17,"nodeType":"527","messageId":"528","endLine":14,"endColumn":20},{"ruleId":"525","severity":1,"message":"583","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":25},{"ruleId":"525","severity":1,"message":"579","line":1,"column":27,"nodeType":"527","messageId":"528","endLine":1,"endColumn":36},{"ruleId":"525","severity":1,"message":"556","line":14,"column":17,"nodeType":"527","messageId":"528","endLine":14,"endColumn":20},{"ruleId":"525","severity":1,"message":"582","line":10,"column":21,"nodeType":"527","messageId":"528","endLine":10,"endColumn":40},{"ruleId":"562","severity":1,"message":"563","line":15,"column":15,"nodeType":"564","endLine":15,"endColumn":64},{"ruleId":"534","severity":1,"message":"535","line":21,"column":19,"nodeType":"536","messageId":"537","endLine":21,"endColumn":21},{"ruleId":"598","severity":1,"message":"600","line":14,"column":33,"nodeType":"564","endLine":14,"endColumn":45},{"ruleId":"598","severity":1,"message":"600","line":15,"column":33,"nodeType":"564","endLine":15,"endColumn":45},{"ruleId":"598","severity":1,"message":"600","line":23,"column":79,"nodeType":"564","endLine":23,"endColumn":91},{"ruleId":"598","severity":1,"message":"600","line":23,"column":133,"nodeType":"564","endLine":23,"endColumn":145},{"ruleId":"598","severity":1,"message":"600","line":23,"column":189,"nodeType":"564","endLine":23,"endColumn":201},{"ruleId":"525","severity":1,"message":"603","line":10,"column":17,"nodeType":"527","messageId":"528","endLine":10,"endColumn":28},{"ruleId":"525","severity":1,"message":"604","line":10,"column":69,"nodeType":"527","messageId":"528","endLine":10,"endColumn":79},{"ruleId":"525","severity":1,"message":"605","line":10,"column":124,"nodeType":"527","messageId":"528","endLine":10,"endColumn":143},{"ruleId":"598","severity":1,"message":"599","line":117,"column":13,"nodeType":"564","endLine":117,"endColumn":134},{"ruleId":"525","severity":1,"message":"603","line":12,"column":5,"nodeType":"527","messageId":"528","endLine":12,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":127,"column":17,"nodeType":"564","endLine":131,"endColumn":18},{"ruleId":"598","severity":1,"message":"599","line":242,"column":15,"nodeType":"564","endLine":246,"endColumn":16},{"ruleId":"538","severity":1,"message":"549","line":15,"column":15,"nodeType":"550","endLine":18,"endColumn":6},{"ruleId":"538","severity":1,"message":"543","line":18,"column":8,"nodeType":"540","endLine":18,"endColumn":10,"suggestions":"622"},{"ruleId":"557","severity":1,"message":"558","line":21,"column":21,"nodeType":"550","messageId":"559","endLine":21,"endColumn":23},{"ruleId":"557","severity":1,"message":"558","line":29,"column":24,"nodeType":"550","messageId":"559","endLine":29,"endColumn":26},{"ruleId":"534","severity":1,"message":"535","line":30,"column":44,"nodeType":"536","messageId":"537","endLine":30,"endColumn":46},{"ruleId":"557","severity":1,"message":"623","line":68,"column":33,"nodeType":"550","messageId":"624","endLine":68,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":69,"column":24,"nodeType":"536","messageId":"537","endLine":69,"endColumn":26},{"ruleId":"562","severity":1,"message":"563","line":81,"column":21,"nodeType":"564","endLine":81,"endColumn":70},{"ruleId":"538","severity":1,"message":"625","line":132,"column":6,"nodeType":"540","endLine":132,"endColumn":8,"suggestions":"626"},{"ruleId":"538","severity":1,"message":"549","line":14,"column":13,"nodeType":"550","endLine":17,"endColumn":4},{"ruleId":"538","severity":1,"message":"543","line":17,"column":6,"nodeType":"540","endLine":17,"endColumn":8,"suggestions":"627"},{"ruleId":"525","severity":1,"message":"579","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"525","severity":1,"message":"628","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":32,"column":39,"nodeType":"550","messageId":"559","endLine":32,"endColumn":41},"no-native-reassign",["629"],"no-negated-in-lhs",["630"],"no-unused-vars","'fire' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","'getAllStores' is defined but never used.","'BrowserRouter' is defined but never used.","'clearInputs' is assigned a value but never used.","'clearErrors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["631"],"'initializeApp' is defined but never used.","React Hook useEffect has a missing dependency: 'userDetails.email'. Either include it or remove the dependency array.",["632"],"'getShelterRequests' is defined but never used.","React Hook useEffect has a missing dependency: 'store_email'. Either include it or remove the dependency array.",["633"],["634"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["635"],"'handleStatusChange' is defined but never used.",["636"],"'getOrder2' is defined but never used.","'key' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'email' and 'userDetails.email'. Either include them or remove the dependency array.",["637"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["638"],"'stores' is assigned a value but never used.",["639"],"'results' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'token' is defined but never used.","no-self-assign","'token' is assigned to itself.","selfAssignment",["640"],["641"],"'useEffect' is defined but never used.","'handleNewRequest' is defined but never used.","'Box' is defined but never used.","'handleDeleteRequest' is assigned a value but never used.","'useState' is defined but never used.","'userDetails' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Tax' is defined but never used.","'History' is defined but never used.","'ShelterHome' is defined but never used.","'StoreHome' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CardActions' is defined but never used.","'Link' is defined but never used.","'store_email' is assigned a value but never used.","'store_name' is assigned a value but never used.","'handleRequestDelete' is assigned a value but never used.","'CreateNewOrder' is defined but never used.","'ReactDOM' is defined but never used.",["642"],"'setUserDetails' is assigned a value but never used.",["643"],["644"],"'db' is assigned a value but never used.",["645"],["646"],["647"],["648"],["649"],["650"],["651"],["652"],["653"],["654"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'getDistances'. Either include it or remove the dependency array.",["655"],["656"],"'getAllShelters' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"659","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"664","fix":"670"},{"desc":"659","fix":"671"},{"desc":"664","fix":"672"},{"desc":"659","fix":"673"},{"desc":"657","fix":"674"},{"desc":"661","fix":"675"},{"desc":"659","fix":"676"},{"desc":"659","fix":"677"},{"desc":"664","fix":"678"},{"desc":"664","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"659","fix":"684"},{"desc":"659","fix":"685"},{"desc":"664","fix":"686"},{"desc":"666","fix":"687"},{"desc":"659","fix":"688"},{"desc":"689","fix":"690"},{"desc":"659","fix":"691"},"Update the dependencies array to be: [email, isUser]",{"range":"692","text":"693"},"Update the dependencies array to be: [userDetails.email]",{"range":"694","text":"695"},"Update the dependencies array to be: [store_email]",{"range":"696","text":"697"},{"range":"698","text":"695"},"Update the dependencies array to be: [id]",{"range":"699","text":"700"},"Update the dependencies array to be: [id, request_status]",{"range":"701","text":"702"},"Update the dependencies array to be: [email, storeDetails, userDetails.email]",{"range":"703","text":"704"},{"range":"705","text":"700"},{"range":"706","text":"695"},{"range":"707","text":"700"},{"range":"708","text":"695"},{"range":"709","text":"693"},{"range":"710","text":"697"},{"range":"711","text":"695"},{"range":"712","text":"695"},{"range":"713","text":"700"},{"range":"714","text":"700"},"Update the dependencies array to be: [email]",{"range":"715","text":"716"},"Update the dependencies array to be: [storeDetails, userDetails.email]",{"range":"717","text":"718"},{"range":"719","text":"695"},{"range":"720","text":"695"},{"range":"721","text":"700"},{"range":"722","text":"702"},{"range":"723","text":"695"},"Update the dependencies array to be: [getDistances]",{"range":"724","text":"725"},{"range":"726","text":"695"},[2491,2499],"[email, isUser]",[473,475],"[userDetails.email]",[700,702],"[store_email]",[500,502],[584,586],"[id]",[1065,1081],"[id, request_status]",[1479,1493],"[email, storeDetails, userDetails.email]",[503,505],[876,878],[553,555],[899,901],[2704,2712],[680,682],[500,502],[473,475],[593,595],[504,506],[1281,1283],"[email]",[1530,1544],"[storeDetails, userDetails.email]",[919,921],[942,944],[584,586],[1461,1477],[559,561],[3933,3935],"[getDistances]",[536,538]]